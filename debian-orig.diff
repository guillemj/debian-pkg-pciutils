--- pciutils-3.1.3.orig/pcimodules.man
+++ pciutils-3.1.3/pcimodules.man
@@ -0,0 +1,92 @@
+.TH pcimodules 8 "@TODAY@" "@VERSION@" "Linux PCI Utilities"
+.IX pcimodules
+.SH NAME
+pcimodules \- List kernel driver modules available for all currently plugged
+in PCI devices
+.SH SYNOPSIS
+.B pcimodules
+.RB [ --class class_id ]
+.RB [ --classmask mask ]
+.RB [ --help ]
+.SH DESCRIPTION
+.B pcimodules
+lists all driver modules for all currently plugged in PCI devices.
+.B pcimodules
+should be run at boot time, and whenever a PCI device is "hot plugged"
+into the system.  This can be done by the following Bourne shell syntax:
+.IP
+	for module in $(pcimodules) ; do
+.IP
+		modprobe -s -k "$module"
+.IP
+	done
+.PP
+When a PCI device is removed from the system, the Linux kernel will
+decrement a usage count on PCI driver module.  If this count drops
+to zero (i.e., there are no PCI drivers), then the
+.B modprobe -r
+process that is normally configured to run from cron every few minutes
+will eventually remove the unneeded module.
+.PP
+The --class and --classmask arguments can be used to limit the search
+to certain classes of PCI devices.  This is useful, for example, to
+generate a list of ethernet card drivers to be loaded when the kernel
+has indicated that it is trying to resolve an unknown network interface.
+.PP
+Modules are listed in the order in which the PCI devices are physically
+arranged so that the computer owner can arrange things like having scsi
+device 0 be on a controller that is not alphabetically the first scsi
+controller.
+.SH OPTIONS
+.TP
+.B --class class --classmask mask
+.PP
+--class and --classmask limit the search to PCI
+cards in particular classes.  These arguments are always used together.
+The arguments to --class and --classmask
+can be given as hexadecimal numbers by prefixing a leading "0x".
+Note that the classes used by pcimodules are in "Linux" format,
+meaning the class value that you see with lspci would be shifted
+left eight bits, with the new low eight bits programming interface ID.
+An examples of how to use class and classmask is provided below.
+.B --help, -h
+Print a help message and exit.
+.SH EXAMPLES
+.TP
+pcimodules
+lists all modules corresponding to currently plugged in PCI devices.
+.TP
+pcimodules --class 0x20000 --classmask 0xffff00
+lists all modules corresponding to currently plugged in ethernet PCI devices.
+.SH FILES
+.TP
+.B /lib/modules/<kernel-version>/modules.pcimap
+This file is automatically generated by
+.B depmod,
+and used by
+.B pcimodules
+to determine which modules correspond to which PCI ID's.
+.TP
+.B /proc/bus/pci
+An interface to PCI bus configuration space provided by the post-2.1.82 Linux
+kernels. Contains per-bus subdirectories with per-card config space files and a
+.I devices
+file containing a list of all PCI devices.
+
+.SH SEE ALSO
+.BR lspci (8)
+
+.SH MAINTAINER
+The Linux PCI Utilities are maintained by Martin Mares <mj@suse.cz>.
+
+.SH AUTHOR
+.B pcimodules
+was written by Adam J. Richter <adam@yggdrasil.com>, based on public
+domain example code by Martin Mares <mj@suse.cz>.
+
+.SH COPYRIGHT
+.B pcimodules
+is copyright 2000, Yggdrasil Computing, Incorporated, and may
+be copied under the terms and conditions of version 2 of the GNU
+General Public License as published by the Free Software Foundation
+(Cambridge, Massachusetts, United States of America).
--- pciutils-3.1.3.orig/setpci.man
+++ pciutils-3.1.3/setpci.man
@@ -124,7 +124,7 @@
 .I data
 and
 .I mask
-are hexdecimal numbers. In the latter case, only the bits corresponding to binary
+are hexadecimal numbers. In the latter case, only the bits corresponding to binary
 ones in the \fImask\fP are changed (technically, this is a read-modify-write operation).
 
 .PP
--- pciutils-3.1.3.orig/update-pciids.sh
+++ pciutils-3.1.3/update-pciids.sh
@@ -1,75 +1,131 @@
 #!/bin/sh
 
-[ "$1" = "-q" ] && quiet=true || quiet=false
+# update-pciids.sh is licensed under the GNU General Public License
+# (GPL) version 2 or above.
+# 
+# Copyright (C) 2008  Anibal Monsalve Salazar <anibal@debian.org>
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 2 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# Please read the "COPYING" file in the archive root, or visit
+# http://www.gnu.org/licenses/gpl.html, for information about the GPL.
+#
+# This scipt is a rewrite of a script with the same name by
+# Martin Mares.
 
 set -e
-SRC="http://pciids.sourceforge.net/v2.2/pci.ids"
-DEST=pci.ids
-PCI_COMPRESSED_IDS=
-GREP=grep
-
-# if pci.ids is read-only (because the filesystem is read-only),
-# then just skip this whole process.
-if ! touch ${DEST} >/dev/null 2>&1 ; then
-	${quiet} || echo "${DEST} is read-only, exiting." 1>&2
-	exit 1
-fi
-
-if [ -n "$PCI_COMPRESSED_IDS" ] ; then
-	DECOMP="cat"
-	SRC="$SRC.gz"
-	GREP=zgrep
-elif which bzip2 >/dev/null 2>&1 ; then
-	DECOMP="bzip2 -d"
-	SRC="$SRC.bz2"
-elif which gzip >/dev/null 2>&1 ; then
-	DECOMP="gzip -d"
-	SRC="$SRC.gz"
+
+#URL="http://pci-ids.ucw.cz/pci.ids"
+URL="http://pciids.sourceforge.net/v2.2/pci.ids"
+FILE="pci.ids"
+
+RM="/bin/rm"
+MV="/bin/mv"
+SED="/bin/sed"
+GREP="/bin/grep"
+GZIP="/bin/gzip"
+ECHO="/bin/echo"
+CHMOD="/bin/chmod"
+CHOWN="/bin/chown"
+GUNZIP="/bin/gunzip"
+BUNZIP2="/bin/bunzip2"
+TOUCH="/usr/bin/touch"
+WGET="/usr/bin/wget"
+CURL="/usr/bin/curl"
+LYNX="/usr/bin/lynx"
+
+NEWFILE="$FILE.new"
+OLDFILE="$FILE.old"
+
+if [ "$1" = "-q" ]
+then
+    quiet="yes"
 else
-	DECOMP="cat"
+    quiet="no"
 fi
 
-if which curl >/dev/null 2>&1 ; then
-	DL="curl -o $DEST.new $SRC"
-    ${quiet} && DL="$DL -s -S"
-elif which wget >/dev/null 2>&1 ; then
-	DL="wget --no-timestamping -O $DEST.new $SRC"
-	${quiet} && DL="$DL -q"
-elif which lynx >/dev/null 2>&1 ; then
-	DL="eval lynx -source $SRC >$DEST.new"
+if ! $TOUCH $NEWFILE > /dev/null 2>&1
+then
+    $ECHO >&2 "update-pciids: $NEWFILE is read-only"
+    exit 1
+fi
+
+[ -f $NEWFILE ]     && $RM $NEWFILE
+[ -f $NEWFILE.bz2 ] && $RM $NEWFILE.bz2
+[ -f $NEWFILE.gz ]  && $RM $NEWFILE.gz
+
+if [ -x $BUNZIP2 ]
+then
+    EXT=".bz2"
+    UNZIP=$BUNZIP2
+elif [ -x $GUNZIP ]
+then
+    EXT=".gz"
+    UNZIP=$GUNZIP
 else
-	echo >&2 "update-pciids: cannot find curl, wget or lynx"
-	exit 1
+    $ECHO >&2 "update-pciids: cannot find bunzip2 or gunzip"
+    exit 1
 fi
 
-if ! $DL ; then
-	echo >&2 "update-pciids: download failed"
-	rm -f $DEST.new
-	exit 1
+if [ -x $WGET ]
+then
+    $WGET -nv -O $NEWFILE$EXT $URL$EXT > /dev/null 2>&1
+elif [ -x $CURL ]
+then
+    $CURL -o $NEWFILE$EXT $URL$EXT > /dev/null 2>&1
+elif [ -x $LYNX ]
+then
+    $LYNX -source $URL$EXT > $NEWFILE$EXT
+else
+    $ECHO >&2 "update-pciids: cannot find wget, curl or lynx"
+    exit 1
 fi
 
-if ! $DECOMP <$DEST.new >$DEST.neww ; then
-	echo >&2 "update-pciids: decompression failed, probably truncated file"
-	exit 1
+$UNZIP < $NEWFILE$EXT > $NEWFILE
+$RM $NEWFILE$EXT
+
+if ! $GREP > /dev/null "^C " $NEWFILE
+then
+    $ECHO >&2 "update-pciids: missing class info, probably truncated file"
+    exit 1
 fi
 
-if ! $GREP >/dev/null "^C " $DEST.neww ; then
-	echo >&2 "update-pciids: missing class info, probably truncated file"
-	exit 1
+date=$( $GREP -E "^#[[:space:]]Date:[[:space:]]*" $NEWFILE 2> /dev/null | $SED "s/^#[[:space:]]Date:[[:space:]]*//" )
+
+if [ -z "$date" ]
+then
+    $ECHO >&2 "update-pciids: missing snapshot date, probably truncated file"
+    exit 1
+fi 
+
+if [ -f $FILE ]
+then
+    $CHOWN --reference="$FILE" "$NEWFILE"
+    $CHMOD --reference="$FILE" "$NEWFILE"
+    [ -f $OLDFILE ] && $RM $OLDFILE
+    $MV $FILE $OLDFILE
 fi
 
-if [ -f $DEST ] ; then
-	mv $DEST $DEST.old
-	# --reference is supported only by chmod from GNU file, so let's ignore any errors
-	chmod -f --reference=$DEST.old $DEST.neww 2>/dev/null || true
+$MV $NEWFILE $FILE
+$TOUCH -d "$date" $FILE
+
+if [ -f $FILE.gz ]
+then
+    [ -f $OLDFILE.gz ] && $RM $OLDFILE.gz
+    $MV $FILE.gz $OLDFILE.gz
 fi
-mv $DEST.neww $DEST
-rm $DEST.new
 
-# Older versions did not compress the ids file, so let's make sure we
-# clean that up.
-if [ ${DEST%.gz} != ${DEST} ] ; then
-	rm -f ${DEST%.gz} ${DEST%.gz}.old
+if [ $quiet = "no" ]
+then
+    $ECHO "Downloaded daily snapshot dated $date"
 fi
 
-${quiet} || echo "Done."
+exit 0
--- pciutils-3.1.3.orig/pcimodules.c
+++ pciutils-3.1.3/pcimodules.c
@@ -0,0 +1,185 @@
+/*
+ *	pcimodules:  Load all kernel modules for PCI device currently
+ *      plugged into any PCI slot.
+ *
+ *	Copyright 2000 Yggdrasil Computing, Incorporated
+ *	This file may be copied under the terms and conditions of version 
+ *      two of the GNU General Public License, as published by the Free
+ *      Software Foundation (Cambridge, Massachusetts, USA).
+ *
+ *      This file is based on pciutils/lib/example.c, which has the following
+ *      authorship and copyright statement:
+ *
+ *		Written by Martin Mares and put to public domain. You can do
+ *		with it anything you want, but I don't give you any warranty.
+ */
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <malloc.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/utsname.h>
+#include <sys/param.h>
+#include <sys/types.h>
+
+#define _GNU_SOURCE
+#include <getopt.h>
+
+#include "pciutils.h"
+
+const char program_name[] = "pcimodules";
+
+#define MODDIR	"/lib/modules"
+#define PCIMAP	"modules.pcimap"
+
+#define LINELENGTH	8000 
+
+#define DEVICE_ANY	0xffffffff
+#define VENDOR_ANY	0xffffffff
+
+#include "lib/pci.h"
+
+struct pcimap_entry {
+	unsigned int vendor, subsys_vendor, dev, subsys_dev, class, class_mask;
+	char *module;
+	struct pcimap_entry *next;
+};
+
+static struct pcimap_entry *pcimap_list = NULL;
+
+#define OPT_STRING "h"
+static struct option long_options[] = {
+	{"class",	required_argument,	NULL, 'c'},
+	{"classmask",	required_argument,	NULL, 'm'},
+	{"help",	no_argument,		NULL, 'h'},
+	{ 0,		0,			0, 	0}
+};
+
+static unsigned long desired_class;
+static unsigned long desired_classmask; /* Default is 0: accept all classes.*/
+
+void
+read_pcimap(void)
+{
+	struct utsname utsname;
+	char filename[MAXPATHLEN];
+	FILE *pcimap_file;
+	char line[LINELENGTH];
+	struct pcimap_entry *entry;
+	unsigned int driver_data;
+	char *prevmodule = "";
+	char module[LINELENGTH];
+
+	if (uname(&utsname) < 0) {
+		perror("uname");
+		exit(1);
+	}
+	sprintf(filename, "%s/%s/%s", MODDIR, utsname.release, PCIMAP);
+	if ((pcimap_file = fopen(filename, "r")) == NULL) {
+		perror(filename);
+		exit(1);
+	}
+
+	while(fgets(line, LINELENGTH, pcimap_file) != NULL) {
+		if (line[0] == '#')
+			continue;
+
+		entry = xmalloc(sizeof(struct pcimap_entry));
+
+		if (sscanf(line, "%s 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x",
+			   module,
+			   &entry->vendor, &entry->dev,
+			   &entry->subsys_vendor, &entry->subsys_dev,
+			   &entry->class, &entry->class_mask,
+			   &driver_data) != 8) {
+			fprintf (stderr,
+				"modules.pcimap unparsable line: %s.\n", line);
+			free(entry);
+			continue;
+		}
+
+		/* Optimize memory allocation a bit, in case someday we
+		   have Linux systems with ~100,000 modules.  It also
+		   allows us to just compare pointers to avoid trying
+		   to load a module twice. */
+		if (strcmp(module, prevmodule) != 0) {
+			prevmodule = xmalloc(strlen(module)+1);
+			strcpy(prevmodule, module);
+		}
+		entry->module = prevmodule;
+		entry->next = pcimap_list;
+		pcimap_list = entry;
+	}
+	fclose(pcimap_file);
+}
+
+/* Return a filled in pci_access->dev tree, with the device classes
+   stored in dev->aux.
+*/
+static void
+match_pci_modules(void)
+{
+	struct pci_access *pacc;
+	struct pci_dev *dev;
+	unsigned int class, subsys_dev, subsys_vendor;
+	struct pcimap_entry *map;
+	const char *prevmodule = "";
+
+	pacc = pci_alloc();		/* Get the pci_access structure */
+	/* Set all options you want -- here we stick with the defaults */
+	pci_init(pacc);		/* Initialize the PCI library */
+	pci_scan_bus(pacc);	/* We want to get the list of devices */
+  	for(dev=pacc->devices; dev; dev=dev->next) {
+		pci_fill_info(dev, PCI_FILL_IDENT | PCI_FILL_BASES);
+		class = (pci_read_word(dev, PCI_CLASS_DEVICE) << 8)
+			| pci_read_byte(dev, PCI_CLASS_PROG);
+		subsys_dev = pci_read_word(dev, PCI_SUBSYSTEM_ID);
+		subsys_vendor = pci_read_word(dev,PCI_SUBSYSTEM_VENDOR_ID);
+		for(map = pcimap_list; map != NULL; map = map->next) {
+			if (((map->class ^ class) & map->class_mask) == 0 &&
+			    ((desired_class ^ class) & desired_classmask)==0 &&
+			    (map->dev == DEVICE_ANY ||
+			     map->dev == dev->device_id) &&
+			    (map->vendor == VENDOR_ANY ||
+			     map->vendor == dev->vendor_id) &&
+			    (map->subsys_dev == DEVICE_ANY ||
+			     map->subsys_dev == subsys_dev) &&
+			    (map->subsys_vendor == VENDOR_ANY ||
+			     map->subsys_vendor == subsys_vendor) &&
+			    prevmodule != map->module) {
+				printf("%s\n", map->module);
+				prevmodule = map->module;
+			}
+		}
+
+	}
+	pci_cleanup(pacc);
+}
+
+int
+main (int argc, char **argv)
+{
+	int opt_index = 0;
+	int opt;
+
+	while ((opt = getopt_long(argc, argv, OPT_STRING, long_options,
+		           &opt_index)) != -1) {
+		switch(opt) {
+			case 'c':
+				desired_class = strtol(optarg, NULL, 0);
+				break;
+			case 'm':
+				desired_classmask = strtol(optarg, NULL, 0);
+				break;
+			case 'h':
+				printf ("Usage: pcimodules [--help]\n"
+					"  Lists kernel modules corresponding to PCI devices currently plugged"
+					"  into the computer.\n");
+		}
+	}	
+
+	read_pcimap();
+	match_pci_modules();
+	return 0;
+}
--- pciutils-3.1.3.orig/Makefile
+++ pciutils-3.1.3/Makefile
@@ -1,7 +1,7 @@
 # Makefile for The PCI Utilities
 # (c) 1998--2009 Martin Mares <mj@ucw.cz>
 
-OPT=-O2
+OPT=-O2 -g
 CFLAGS=$(OPT) -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes
 
 VERSION=3.1.3
@@ -52,7 +52,9 @@
 
 export
 
-all: lib/$(PCILIB) lspci setpci example lspci.8 setpci.8 pcilib.7 update-pciids update-pciids.8 $(PCI_IDS)
+pcimod-$(PCI_OS_LINUX) := pcimodules
+pcimod8-$(PCI_OS_LINUX) := pcimodules.8
+all: lib/$(PCILIB) lspci lspci-udeb setpci example lspci.8 setpci.8 pcilib.7 update-pciids update-pciids.8 $(PCI_IDS) $(pcimod-1) $(pcimod8-1)
 
 lib/$(PCILIB): $(PCIINC) force
 	$(MAKE) -C lib all
@@ -63,7 +65,9 @@
 	cd lib && ./configure
 
 lspci: lspci.o ls-vpd.o ls-caps.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/$(PCILIB)
+lspci-udeb: lspci.o ls-vpd.o ls-caps.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/libpci.a
 setpci: setpci.o common.o lib/$(PCILIB)
+pcimodules: pcimodules.o common.o lib/$(PCILIB)
 
 LSPCIINC=lspci.h pciutils.h $(PCIINC)
 lspci.o: lspci.c $(LSPCIINC)
@@ -75,10 +79,11 @@
 ls-map.o: ls-map.c $(LSPCIINC)
 
 setpci.o: setpci.c pciutils.h $(PCIINC)
+pcimodules.o: pcimodules.c pciutils.h $(PCIINC)
 common.o: common.c pciutils.h $(PCIINC)
 
 update-pciids: update-pciids.sh
-	sed <$< >$@ "s@^DEST=.*@DEST=$(IDSDIR)/$(PCI_IDS)@;s@^PCI_COMPRESSED_IDS=.*@PCI_COMPRESSED_IDS=$(PCI_COMPRESSED_IDS)@"
+	sed <$< >$@ "s@^FILE=.*@FILE=$(IDSDIR)/pci.ids@"
 	chmod +x $@
 
 # The example of use of libpci
@@ -88,12 +93,16 @@
 %: %.o
 	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LDLIBS) -o $@
 
+lspci-udeb: lspci.o
+	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LDLIBS) -lz -lresolv -o $@
+
 %.8 %.7: %.man
 	M=`echo $(DATE) | sed 's/-01-/-January-/;s/-02-/-February-/;s/-03-/-March-/;s/-04-/-April-/;s/-05-/-May-/;s/-06-/-June-/;s/-07-/-July-/;s/-08-/-August-/;s/-09-/-September-/;s/-10-/-October-/;s/-11-/-November-/;s/-12-/-December-/;s/\(.*\)-\(.*\)-\(.*\)/\3 \2 \1/'` ; sed <$< >$@ "s/@TODAY@/$$M/;s/@VERSION@/pciutils-$(VERSION)/;s#@IDSDIR@#$(IDSDIR)#"
 
 clean:
 	rm -f `find . -name "*~" -o -name "*.[oa]" -o -name "\#*\#" -o -name TAGS -o -name core -o -name "*.orig"`
 	rm -f update-pciids lspci setpci example lib/config.* *.[78] pci.ids.* lib/*.pc lib/*.so lib/*.so.*
+	rm -f pcimodules
 	rm -rf maint/dist
 
 distclean: clean
@@ -101,10 +110,11 @@
 install: all
 # -c is ignored on Linux, but required on FreeBSD
 	$(DIRINSTALL) -m 755 $(DESTDIR)$(SBINDIR) $(DESTDIR)$(IDSDIR) $(DESTDIR)$(MANDIR)/man8 $(DESTDIR)$(MANDIR)/man7
-	$(INSTALL) -c -m 755 $(STRIP) lspci setpci $(DESTDIR)$(SBINDIR)
+	$(INSTALL) -c -m 755 $(STRIP) lspci setpci $(pcimod-1) $(DESTDIR)$(SBINDIR)
+	$(INSTALL) -c -m 755 $(STRIP) lspci-udeb $(DESTDIR)-udeb$(SBINDIR)/lspci
 	$(INSTALL) -c -m 755 update-pciids $(DESTDIR)$(SBINDIR)
 	$(INSTALL) -c -m 644 $(PCI_IDS) $(DESTDIR)$(IDSDIR)
-	$(INSTALL) -c -m 644 lspci.8 setpci.8 update-pciids.8 $(DESTDIR)$(MANDIR)/man8
+	$(INSTALL) -c -m 644 lspci.8 setpci.8 update-pciids.8 $(pcimod8-1) $(DESTDIR)$(MANDIR)/man8
 	$(INSTALL) -c -m 644 pcilib.7 $(DESTDIR)$(MANDIR)/man7
 ifeq ($(SHARED),yes)
 	$(DIRINSTALL) -m 755 $(DESTDIR)$(LIBDIR)
@@ -123,8 +133,10 @@
 
 uninstall: all
 	rm -f $(DESTDIR)$(SBINDIR)/lspci $(DESTDIR)$(SBINDIR)/setpci $(DESTDIR)$(SBINDIR)/update-pciids
+	rm -f $(DESTDIR)-udeb$(SBINDIR)/lspci
 	rm -f $(DESTDIR)$(IDSDIR)/$(PCI_IDS)
 	rm -f $(DESTDIR)$(MANDIR)/man8/lspci.8 $(DESTDIR)$(MANDIR)/man8/setpci.8 $(DESTDIR)$(MANDIR)/man8/update-pciids.8
+	rm -f $(DESTDIR)$(SBINDIR)/pcimodules $(DESTDIR)$(MANDIR)/man8/pcimodules.8
 	rm -f $(DESTDIR)$(MANDIR)/man7/pcilib.7
 ifeq ($(SHARED),yes)
 	rm -f $(DESTDIR)$(LIBDIR)/$(PCILIB) $(DESTDIR)$(LIBDIR)/$(LIBNAME).so$(ABI_VERSION)
--- pciutils-3.1.3.orig/pci.ids
+++ pciutils-3.1.3/pci.ids
@@ -1,8 +1,8 @@
 #
 #	List of PCI ID's
 #
-#	Version: 2009.07.04
-#	Date:    2009-07-04 18:08:58
+#	Version: 2009.07.27
+#	Date:    2009-07-27 03:15:01
 #
 #	Maintained by Martin Mares <mj@ucw.cz> and other volunteers from the
 #	PCI ID Project at http://pciids.sf.net/.
@@ -1518,6 +1518,7 @@
 	9489  M96 XT [Mobility FireGL V5725]
 	9490  RV730XT [Radeon HD 4670]
 		174b e880  Radeon HD 4670 512MB DDR3
+	9491  M96 CSP [ATI RADEON E4690]
 	9495  HD 4650
 	9498  RV730 PRO [Radeon HD 4650]
 	949f  RV730 [FirePro V5700]
@@ -3938,7 +3939,7 @@
 		108e a001  Ultra IIe on Blade 100 motherboard
 	a801  Schizo Fireplane-PCI bus bridge module [pcisch]
 	abba  Cassini 10/100/1000
-	abcd  Multithreaded 10 Gigabit Ethernet Network Controller
+	abcd  Multithreaded 10-Gigabit Ethernet Network Controller
 	c416  Sun Fire System/System Controller Interface chip [sbbc]
 108f  Systemsoft
 1090  Compro Computer Services, Inc.
@@ -7652,12 +7653,13 @@
 1136  Momentum Data Systems
 	0002  PCI-JTAG
 1137  Cisco Systems Inc
-	0023  PCIe Upstream Port Bridge
-	0041  PCIe Downstream Port Bridge
-	0043  10G Ethernet NIC
-		1137 0048  Mezzanine
-	0045  FCoE HBA
-		1137 0048  Mezzanine
+	0023  81 VIC PCIe Upstream Port
+	0040  VIC PCIe Upstream Port
+	0041  VIC PCIe Downstream Port
+	0043  VIC Ethernet NIC
+		1137 0048  M81KR Mezzanine
+	0045  VIC FCoE HBA
+		1137 0048  M81KR Mezzanine
 1138  Ziatech Corporation
 	8905  8905 [STD 32 Bridge]
 1139  Dynamic Pictures, Inc
@@ -11115,11 +11117,11 @@
 		103c 7038  NC373i Integrated Multifunction Gigabit Server Adapter
 		103c 7045  NC374m PCI Express Dual Port Multifunction Gigabit Server Adapter
 	164d  NetXtreme BCM5702FE Gigabit Ethernet
-	164e  NetXtreme II BCM57710 10Gigabit PCIe [Everest]
+	164e  NetXtreme II BCM57710 10-Gigabit PCIe [Everest]
 		103c 171c  NC532m Dual Port 10GbE Multifunction BL-C Adapter
 		103c 7058  NC532i Dual Port 10GbE Multifunction BL-C Adapter
-	164f  NetXtreme II BCM57711 10Gigabit PCIe
-	1650  NetXtreme II BCM57711E 10Gigabit PCIe
+	164f  NetXtreme II BCM57711 10-Gigabit PCIe
+	1650  NetXtreme II BCM57711E 10-Gigabit PCIe
 		103c 171c  NC532m Dual Port 10GbE Multifunction BL-C Adapter
 		103c 7058  NC532i Dual Port 10GbE Multifunction BL-C Adapter
 	1653  NetXtreme BCM5705 Gigabit Ethernet
@@ -11201,6 +11203,7 @@
 	1681  NetXtreme BCM5761 Gigabit Ethernet PCIe
 	1684  NetXtreme BCM5764M Gigabit Ethernet PCIe
 	1690  NetXtreme BCM57760 Gigabit Ethernet PCIe
+	1691  NetLink BCM57788 Gigabit Ethernet PCIe
 	1692  NetLink BCM57780 Gigabit Ethernet PCIe
 	1693  NetLink BCM5787M Gigabit Ethernet PCI Express
 		1025 0121  Aspire 5920G
@@ -12456,7 +12459,7 @@
 	7174  VSC7174 PCI/PCI-X Serial ATA Host Bus Controller
 172a  Accelerated Encryption
 	13c8  AEP SureWare Runner 1000V3
-1734  Fujitsu Siemens Computers
+1734  Fujitsu Technology Solutions
 	1078  Amilo Pro v2010
 	1085  Celsius M450
 	1098  Amilo L 1310G
@@ -12579,16 +12582,37 @@
 	1260  ARC-1260 16-Port PCI-Express to SATA RAID Controller
 	1280  ARC-1231 12-Port PCI-Express to SATA RAID Controller
 	1680  ARC-1680 8 port PCIe/PCI-X to SAS/SATA II RAID Controller
-17d5  S2io Inc.
-	5731  Xframe 10GbE PCI-X
-	5732  Xframe II 10GbE [Hercules]
-	5831  Xframe 10 Gigabit Ethernet PCI-X
+# Nee S2io Inc.
+17d5  Neterion Inc.
+	5731  Xframe 10-Gigabit Ethernet PCI-X
+	5732  Xframe II 10-Gigabit Ethernet PCI-X 2.0
+	5831  Xframe 10-Gigabit Ethernet PCI-X
 		103c 12d5  PCI-X 133MHz 10GbE SR Fiber
-		10a9 8020  Single Port 10 Gigabit Ethernet (PCI-X, Fiber)
-		10a9 8024  Single Port 10 Gigabit Ethernet (PCI-X, Fiber)
-	5832  Xframe II 10Gbps Ethernet
+		10a9 8020  Single Port 10-Gigabit Ethernet (PCI-X, Fiber)
+		10a9 8024  Single Port 10-Gigabit Ethernet (PCI-X, Fiber)
+	5832  Xframe II 10-Gigabit Ethernet PCI-X 2.0
 		103c 1337  PCI-X 266MHz 10GigE SR [AD385A]
-		10a9 8021  Single Port 10 Gigabit Ethernet II (PCI-X, Fiber)
+		10a9 8021  Single Port 10-Gigabit Ethernet II (PCI-X, Fiber)
+		17d5 6020  Xframe II SR
+		17d5 6021  Xframe II SR, Low Profile
+		17d5 6022  Xframe E SR
+		17d5 6420  Xframe II LR
+		17d5 6421  Xframe II LR, Low Profile
+		17d5 6422  Xframe E LR
+		17d5 6c20  Xframe II CX4
+		17d5 6c21  Xframe II CX4, Low Profile
+		17d5 6c22  Xframe E CX4
+	5833  X3100 Series 10 Gigabit Ethernet PCIe
+		17d5 6030  X3110 Single Port SR
+		17d5 6031  X3120 Dual Port SR
+		17d5 6430  X3110 Single Port LR
+		17d5 6431  X3120 Dual Port LR
+		17d5 7030  X3110 Single Port LRM
+		17d5 7031  X3120 Dual Port LRM
+		17d5 7430  X3110 Single Port 10GBase-T
+		17d5 7431  X3120 Dual Port 10GBase-T
+		17d5 7830  X3110 Single Port 10GBase-CR
+		17d5 7831  X3120 Dual Port 10GBase-CR
 17db  Cray Inc
 	0101  XT Series [Seastar] 3D Toroidal Router
 17de  KWorld Computer Co. Ltd.
@@ -12781,6 +12805,12 @@
 		18ec d004  COMBO-2XFP
 18ee  Chenming Mold Ind. Corp.
 18f1  Spectrum GmbH
+18f4  Napatech A/S
+	0051  NT20-X Capture Card
+	0061  NT20E Capture Card
+	0071  NT4E Capture Card
+	0081  NT4E 8-port Expansion Card
+	0091  NT20X Capture Card [New Rev]
 18f6  NextIO
 	1000  [Nexsis] Switch Virtual P2P PCIe Bridge
 	1050  [Nexsis] Switch Virtual P2P PCI Bridge
@@ -12924,7 +12954,7 @@
 	a003  PWRficient SMBus Controller
 	a004  PWRficient 16550 UART
 	a005  PWRficient Gigabit Ethernet
-	a006  PWRficient 10Gigabit Ethernet
+	a006  PWRficient 10-Gigabit Ethernet
 	a007  PWRficient DMA Controller
 	a008  PWRficient LPC/Localbus Interface
 	a009  PWRficient L2 Cache
@@ -13056,7 +13086,7 @@
 1a77  Lightfleet Corporation
 1a78  Virident Systems Inc.
 1a84  Commex Technologies
-	0001  Vulcan SP HT6210 10 Gigabit Ethernet (rev 02)
+	0001  Vulcan SP HT6210 10-Gigabit Ethernet (rev 02)
 1a88  MEN Mikro Elektronik
 	4d45  Multifunction IP core
 1a8c  Verigy Pte. Ltd.
@@ -13119,9 +13149,9 @@
 	000d  IBA6110 InfiniBand HCA
 	0010  IBA6120 InfiniBand HCA
 1fc9  Tehuti Networks Ltd.
-	3009  10 Giga TOE SmartNIC
-	3010  10 Giga TOE SmartNIC
-	3014  10 Giga TOE SmartNIC 2-Port
+	3009  10-Giga TOE SmartNIC
+	3010  10-Giga TOE SmartNIC
+	3014  10-Giga TOE SmartNIC 2-Port
 1fce  Cognio Inc.
 	0001  Spectrum Analyzer PC Card (SAgE)
 1fd4  SUNIX Co., Ltd.
@@ -13246,17 +13276,17 @@
 4033  Addtron Technology Co, Inc.
 	1360  RTL8139 Ethernet
 4040  NetXen Incorporated
-	0001  NXB-10GXSR 10 Gigabit Ethernet PCIe Adapter with SR-XFP optical interface
-		103c 7047  NC510F PCIe 10 Gigabit Server Adapter
-	0002  NXB-10GCX4 10 Gigabit Ethernet PCIe Adapter with CX4 copper interface
-		103c 7048  NC510c PCIe 10Gigabit Server Adapter
+	0001  NXB-10GXSR 10-Gigabit Ethernet PCIe Adapter with SR-XFP optical interface
+		103c 7047  NC510F PCIe 10-Gigabit Server Adapter
+	0002  NXB-10GCX4 10-Gigabit Ethernet PCIe Adapter with CX4 copper interface
+		103c 7048  NC510c PCIe 10-Gigabit Server Adapter
 	0003  NXB-4GCU Quad Gigabit Ethernet PCIe Adapter with 1000-BASE-T interface
-	0004  BladeCenter-H 10 Gigabit Ethernet High Speed Daughter Card
+	0004  BladeCenter-H 10-Gigabit Ethernet High Speed Daughter Card
 	0005  NetXen Dual Port 10GbE Multifunction Adapter for c-Class
 		103c 170e  NC512m Dual Port 10GbE Multifunction BL-C Adapter
 	0024  XG Mgmt
 	0025  XG Mgmt
-	0100  NX3031 Multifunction 1/10 Gigabit Server Adapter
+	0100  NX3031 Multifunction 1/10-Gigabit Server Adapter
 		103c 171b  NC522m Dual Port 10GbE Multifunction BL-c Adapter
 		103c 3251  NC375i 1G w/NC524SFP 10G Module
 		103c 705a  NC375i Integrated Quad Port Multifunction Gigabit Server Adapter
@@ -13344,6 +13374,10 @@
 4468  Bridgeport machines
 4594  Cogetec Informatique Inc
 45fb  Baldor Electric Company
+4624  Budker Institute of Nuclear Physics
+	adc1  ADC200ME High speed ADC
+	de01  DL200ME High resolution delay line PCI based card
+	de02  DL200ME Middle resolution delay line PCI based card
 4680  Umax Computer Corp
 4843  Hercules Computer Technology Inc
 4916  RedCreek Communications Inc
@@ -14036,19 +14070,19 @@
 	10c3  82562GT-2 10/100 Network Connection
 	10c4  82562GT 10/100 Network Connection
 	10c5  82562G 10/100 Network Connection
-	10c6  82598EB 10 Gigabit AF Dual Port Network Connection
-		8086 a05f  10 Gigabit XF SR Dual Port Server Adapter
-		8086 a15f  10 Gigabit XF SR Dual Port Server Adapter
-	10c7  82598EB 10 Gigabit AF Network Connection
-		1014 037f  10 Gigabit XF SR Server Adapter
-		1014 0380  10 Gigabit XF LR Server Adapter
-		8086 a05f  10 Gigabit XF SR Server Adapter
-		8086 a15f  10 Gigabit XF SR Server Adapter
-		8086 a16f  10 Gigabit XF SR Server Adapter
-	10c8  82598EB 10 Gigabit AT Network Connection
-		8086 a10c  10 Gigabit AT Server Adapter
-		8086 a11c  10 Gigabit AT Server Adapter
-		8086 a12c  10 Gigabit AT Server Adapter
+	10c6  82598EB 10-Gigabit AF Dual Port Network Connection
+		8086 a05f  10-Gigabit XF SR Dual Port Server Adapter
+		8086 a15f  10-Gigabit XF SR Dual Port Server Adapter
+	10c7  82598EB 10-Gigabit AF Network Connection
+		1014 037f  10-Gigabit XF SR Server Adapter
+		1014 0380  10-Gigabit XF LR Server Adapter
+		8086 a05f  10-Gigabit XF SR Server Adapter
+		8086 a15f  10-Gigabit XF SR Server Adapter
+		8086 a16f  10-Gigabit XF SR Server Adapter
+	10c8  82598EB 10-Gigabit AT Network Connection
+		8086 a10c  10-Gigabit AT Server Adapter
+		8086 a11c  10-Gigabit AT Server Adapter
+		8086 a12c  10-Gigabit AT Server Adapter
 	10c9  82576 Gigabit Network Connection
 		103c 31ef  NC362i Integrated Dual port Gigabit Server Adapter
 		103c 323f  NC362i Integrated Dual port Gigabit Server Adapter
@@ -14073,10 +14107,10 @@
 	10da  82571EB Quad Port Gigabit Mezzanine Adapter
 		103c 1717  NC364m Quad Port 1GbE BL-c Adapter
 	10db  82598EB 10-Gigabit Dual Port Network Connection
-	10dd  82598EB 10 Gigabit AT CX4 Network Connection
+	10dd  82598EB 10-Gigabit AT CX4 Network Connection
 	10de  82567LM-3 Gigabit Network Connection
 	10df  82567LF-3 Gigabit Network Connection
-	10e1  82598EB 10 Gigabit AF Dual Port Network Connection
+	10e1  82598EB 10-Gigabit AF Dual Port Network Connection
 		8086 a15f  10-Gigabit SR Dual Port Express Module
 	10e2  82575GB Gigabit Network Connection
 		8086 10e2  Gigabit VT Quad Port Server Adapter
@@ -14092,28 +14126,28 @@
 	10ea  82577LM Gigabit Network Connection
 	10eb  82577LC Gigabit Network Connection
 	10ec  82598EB 10-Gigabit AT CX4 Network Connection
-		8086 a01f  10 Gigabit CX4 Dual Port Server Adapter
-		8086 a11f  10 Gigabit CX4 Dual Port Server Adapter
+		8086 a01f  10-Gigabit CX4 Dual Port Server Adapter
+		8086 a11f  10-Gigabit CX4 Dual Port Server Adapter
 	10ef  82578DM Gigabit Network Connection
 	10f0  82578DC Gigabit Network Connection
 	10f1  82598EB 10-Gigabit AF Dual Port Network Connection
 		8086 a20f  10-Gigabit AF DA Dual Port Server Adapter
 		8086 a21f  10-Gigabit AF DA Dual Port Server Adapter
 	10f4  82598EB 10-Gigabit AF Network Connection
-		8086 106f  10 Gigabit XF LR Server Adapter
+		8086 106f  10-Gigabit XF LR Server Adapter
 		8086 a06f  10-Gigabit XF LR Server Adapter
 	10f5  82567LM Gigabit Network Connection
 	10f6  82574L Gigabit Network Connection
-	10f7  82599EB 10 Gigabit KX4 Network Connection
+	10f7  82599EB 10-Gigabit KX4 Network Connection
 		8086 000d  Ethernet Mezzanine Adapter X520-KX4-2
-	10fb  82599EB 10 Gigabit Network Connection
+	10fb  82599EB 10-Gigabit Network Connection
 		108e 7b11  Ethernet Server Adapter X520-2
 		8086 0002  Ethernet Server Adapter X520-DA2
 		8086 0003  Ethernet Server Adapter X520-2
 		8086 0006  Ethernet Server Adapter X520-1
 		8086 000a  Ethernet Server Adapter X520-1
 		8086 000c  Ethernet Server Adapter X520-2
-	10fc  82599EB 10 Gigabit Dual Port Network Connection
+	10fc  82599EB 10-Gigabit Dual Port Network Connection
 	10fe  82552 10/100 Network Connection
 	1107  PRO/1000 MF Server Adapter (LX)
 	1130  82815 815 Chipset Host Bridge and Memory Controller Hub
@@ -14335,6 +14369,10 @@
 	1462  82870P2 P64H2 Hot Plug Controller
 	1508  82598EB Gigabit BX Network Connection
 	150a  82576NS Gigabit Network Connection
+	150b  82598EB 10-Gigabit AT2 Server Adapter
+		8086 a10c  82598EB 10-Gigabit AT2 Server Adapter
+		8086 a11c  82598EB 10-Gigabit AT2 Server Adapter
+		8086 a12c  82598EB 10-Gigabit AT2 Server Adapter
 	150c  82583V Gigabit Network Connection
 	1960  80960RP (i960RP) Microprocessor
 		101e 0431  MegaRAID 431 RAID Controller
--- pciutils-3.1.3.orig/lib/Makefile
+++ pciutils-3.1.3/lib/Makefile
@@ -42,18 +42,20 @@
 OBJS += nbsd-libpci
 endif
 
-all: $(PCILIB) $(PCILIBPC)
+PCILIBA=libpci.a
 
-ifeq ($(SHARED),no)
-$(PCILIB): $(addsuffix .o,$(OBJS))
+all: $(PCILIB) $(PCILIBA) $(PCILIBPC)
+
+#ifeq ($(SHARED),no)
+$(PCILIBA): $(addsuffix .o,$(OBJS))
 	rm -f $@
 	$(AR) rcs $@ $^
 	$(RANLIB) $@
-else
+#else
 CFLAGS += -fPIC -fvisibility=hidden
 $(PCILIB): $(addsuffix .o,$(OBJS))
 	$(CC) -shared $(LDFLAGS) $(SONAME) -Wl,--version-script=libpci.ver -o $@ $^ $(LIB_LDLIBS)
-endif
+#endif
 
 $(PCILIBPC): libpci.pc.in
 	sed <$< >$@ -e 's,@PREFIX@,$(PREFIX),' \
