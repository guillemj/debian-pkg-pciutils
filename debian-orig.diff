--- pciutils-3.1.2.orig/pcimodules.man
+++ pciutils-3.1.2/pcimodules.man
@@ -0,0 +1,92 @@
+.TH pcimodules 8 "@TODAY@" "@VERSION@" "Linux PCI Utilities"
+.IX pcimodules
+.SH NAME
+pcimodules \- List kernel driver modules available for all currently plugged
+in PCI devices
+.SH SYNOPSIS
+.B pcimodules
+.RB [ --class class_id ]
+.RB [ --classmask mask ]
+.RB [ --help ]
+.SH DESCRIPTION
+.B pcimodules
+lists all driver modules for all currently plugged in PCI devices.
+.B pcimodules
+should be run at boot time, and whenever a PCI device is "hot plugged"
+into the system.  This can be done by the following Bourne shell syntax:
+.IP
+	for module in $(pcimodules) ; do
+.IP
+		modprobe -s -k "$module"
+.IP
+	done
+.PP
+When a PCI device is removed from the system, the Linux kernel will
+decrement a usage count on PCI driver module.  If this count drops
+to zero (i.e., there are no PCI drivers), then the
+.B modprobe -r
+process that is normally configured to run from cron every few minutes
+will eventually remove the unneeded module.
+.PP
+The --class and --classmask arguments can be used to limit the search
+to certain classes of PCI devices.  This is useful, for example, to
+generate a list of ethernet card drivers to be loaded when the kernel
+has indicated that it is trying to resolve an unknown network interface.
+.PP
+Modules are listed in the order in which the PCI devices are physically
+arranged so that the computer owner can arrange things like having scsi
+device 0 be on a controller that is not alphabetically the first scsi
+controller.
+.SH OPTIONS
+.TP
+.B --class class --classmask mask
+.PP
+--class and --classmask limit the search to PCI
+cards in particular classes.  These arguments are always used together.
+The arguments to --class and --classmask
+can be given as hexadecimal numbers by prefixing a leading "0x".
+Note that the classes used by pcimodules are in "Linux" format,
+meaning the class value that you see with lspci would be shifted
+left eight bits, with the new low eight bits programming interface ID.
+An examples of how to use class and classmask is provided below.
+.B --help, -h
+Print a help message and exit.
+.SH EXAMPLES
+.TP
+pcimodules
+lists all modules corresponding to currently plugged in PCI devices.
+.TP
+pcimodules --class 0x20000 --classmask 0xffff00
+lists all modules corresponding to currently plugged in ethernet PCI devices.
+.SH FILES
+.TP
+.B /lib/modules/<kernel-version>/modules.pcimap
+This file is automatically generated by
+.B depmod,
+and used by
+.B pcimodules
+to determine which modules correspond to which PCI ID's.
+.TP
+.B /proc/bus/pci
+An interface to PCI bus configuration space provided by the post-2.1.82 Linux
+kernels. Contains per-bus subdirectories with per-card config space files and a
+.I devices
+file containing a list of all PCI devices.
+
+.SH SEE ALSO
+.BR lspci (8)
+
+.SH MAINTAINER
+The Linux PCI Utilities are maintained by Martin Mares <mj@suse.cz>.
+
+.SH AUTHOR
+.B pcimodules
+was written by Adam J. Richter <adam@yggdrasil.com>, based on public
+domain example code by Martin Mares <mj@suse.cz>.
+
+.SH COPYRIGHT
+.B pcimodules
+is copyright 2000, Yggdrasil Computing, Incorporated, and may
+be copied under the terms and conditions of version 2 of the GNU
+General Public License as published by the Free Software Foundation
+(Cambridge, Massachusetts, United States of America).
--- pciutils-3.1.2.orig/update-pciids.sh
+++ pciutils-3.1.2/update-pciids.sh
@@ -1,75 +1,128 @@
 #!/bin/sh
 
-[ "$1" = "-q" ] && quiet=true || quiet=false
+# update-pciids.sh is licensed under the GNU General Public License
+# (GPL) version 2 or above.
+# 
+# Copyright (C) 2008  Anibal Monsalve Salazar <anibal@debian.org>
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 2 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# Please read the "COPYING" file in the archive root, or visit
+# http://www.gnu.org/licenses/gpl.html, for information about the GPL.
+#
+# This scipt is a rewrite of a script with the same name by
+# Martin Mares.
 
 set -e
-SRC="http://pciids.sourceforge.net/v2.2/pci.ids"
-DEST=pci.ids
-PCI_COMPRESSED_IDS=
-GREP=grep
-
-# if pci.ids is read-only (because the filesystem is read-only),
-# then just skip this whole process.
-if ! touch ${DEST} >/dev/null 2>&1 ; then
-	${quiet} || echo "${DEST} is read-only, exiting." 1>&2
-	exit 1
-fi
-
-if [ -n "$PCI_COMPRESSED_IDS" ] ; then
-	DECOMP="cat"
-	SRC="$SRC.gz"
-	GREP=zgrep
-elif which bzip2 >/dev/null 2>&1 ; then
-	DECOMP="bzip2 -d"
-	SRC="$SRC.bz2"
-elif which gzip >/dev/null 2>&1 ; then
-	DECOMP="gzip -d"
-	SRC="$SRC.gz"
+
+#URL="http://pci-ids.ucw.cz/pci.ids"
+URL="http://pciids.sourceforge.net/v2.2/pci.ids"
+FILE="pci.ids"
+
+RM="/bin/rm"
+MV="/bin/mv"
+SED="/bin/sed"
+GREP="/bin/grep"
+GZIP="/bin/gzip"
+ECHO="/bin/echo"
+CHMOD="/bin/chmod"
+GUNZIP="/bin/gunzip"
+BUNZIP2="/bin/bunzip2"
+TOUCH="/usr/bin/touch"
+WGET="/usr/bin/wget"
+CURL="/usr/bin/curl"
+LYNX="/usr/bin/lynx"
+
+NEWFILE="$FILE.new"
+OLDFILE="$FILE.old"
+
+if [ "$1" = "-q" ]
+then
+    quiet="yes"
 else
-	DECOMP="cat"
+    quiet="no"
 fi
 
-if which curl >/dev/null 2>&1 ; then
-	DL="curl -o $DEST.new $SRC"
-    ${quiet} && DL="$DL -s -S"
-elif which wget >/dev/null 2>&1 ; then
-	DL="wget --no-timestamping -O $DEST.new $SRC"
-	${quiet} && DL="$DL -q"
-elif which lynx >/dev/null 2>&1 ; then
-	DL="eval lynx -source $SRC >$DEST.new"
+if ! $TOUCH $NEWFILE > /dev/null 2>&1
+then
+    $ECHO >&2 "update-pciids: $NEWFILE is read-only"
+    exit 1
+fi
+
+[ -f $NEWFILE ]     && $RM $NEWFILE
+[ -f $NEWFILE.bz2 ] && $RM $NEWFILE.bz2
+[ -f $NEWFILE.gz ]  && $RM $NEWFILE.gz
+
+if [ -x $BUNZIP2 ]
+then
+    EXT=".bz2"
+    UNZIP=$BUNZIP2
+elif [ -x $GUNZIP ]
+then
+    EXT=".gz"
+    UNZIP=$GUNZIP
 else
-	echo >&2 "update-pciids: cannot find curl, wget or lynx"
-	exit 1
+    $ECHO >&2 "update-pciids: cannot find bunzip2 or gunzip"
+    exit 1
 fi
 
-if ! $DL ; then
-	echo >&2 "update-pciids: download failed"
-	rm -f $DEST.new
-	exit 1
+if [ -x $WGET ]
+then
+    $WGET -nv -O $NEWFILE$EXT $URL$EXT > /dev/null 2>&1
+elif [ -x $CURL ]
+then
+    $CURL -o $NEWFILE$EXT $URL$EXT > /dev/null 2>&1
+elif [ -x $LYNX ]
+then
+    $LYNX -source $URL$EXT > $NEWFILE$EXT
+else
+    $ECHO >&2 "update-pciids: cannot find wget, curl or lynx"
+    exit 1
 fi
 
-if ! $DECOMP <$DEST.new >$DEST.neww ; then
-	echo >&2 "update-pciids: decompression failed, probably truncated file"
-	exit 1
+$UNZIP < $NEWFILE$EXT > $NEWFILE
+$RM $NEWFILE$EXT
+
+if ! $GREP > /dev/null "^C " $NEWFILE
+then
+    $ECHO >&2 "update-pciids: missing class info, probably truncated file"
+    exit 1
 fi
 
-if ! $GREP >/dev/null "^C " $DEST.neww ; then
-	echo >&2 "update-pciids: missing class info, probably truncated file"
-	exit 1
+date=$( $GREP -E "^#[[:space:]]Date:[[:space:]]*" $NEWFILE 2> /dev/null | $SED "s/^#[[:space:]]Date:[[:space:]]*//" )
+
+if [ -z "$date" ]
+then
+    $ECHO >&2 "update-pciids: missing snapshot date, probably truncated file"
+    exit 1
+fi 
+
+if [ -f $FILE ]
+then
+    [ -f $OLDFILE ] && $RM $OLDFILE
+    $MV $FILE $OLDFILE
 fi
 
-if [ -f $DEST ] ; then
-	mv $DEST $DEST.old
-	# --reference is supported only by chmod from GNU file, so let's ignore any errors
-	chmod -f --reference=$DEST.old $DEST.neww 2>/dev/null || true
+$MV $NEWFILE $FILE
+$TOUCH -d "$date" $FILE
+
+if [ -f $FILE.gz ]
+then
+    [ -f $OLDFILE.gz ] && $RM $OLDFILE.gz
+    $MV $FILE.gz $OLDFILE.gz
 fi
-mv $DEST.neww $DEST
-rm $DEST.new
 
-# Older versions did not compress the ids file, so let's make sure we
-# clean that up.
-if [ ${DEST%.gz} != ${DEST} ] ; then
-	rm -f ${DEST%.gz} ${DEST%.gz}.old
+if [ $quiet = "no" ]
+then
+    $ECHO "Downloaded daily snapshot dated $date"
 fi
 
-${quiet} || echo "Done."
+exit 0
--- pciutils-3.1.2.orig/pcimodules.c
+++ pciutils-3.1.2/pcimodules.c
@@ -0,0 +1,185 @@
+/*
+ *	pcimodules:  Load all kernel modules for PCI device currently
+ *      plugged into any PCI slot.
+ *
+ *	Copyright 2000 Yggdrasil Computing, Incorporated
+ *	This file may be copied under the terms and conditions of version 
+ *      two of the GNU General Public License, as published by the Free
+ *      Software Foundation (Cambridge, Massachusetts, USA).
+ *
+ *      This file is based on pciutils/lib/example.c, which has the following
+ *      authorship and copyright statement:
+ *
+ *		Written by Martin Mares and put to public domain. You can do
+ *		with it anything you want, but I don't give you any warranty.
+ */
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <malloc.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/utsname.h>
+#include <sys/param.h>
+#include <sys/types.h>
+
+#define _GNU_SOURCE
+#include <getopt.h>
+
+#include "pciutils.h"
+
+const char program_name[] = "pcimodules";
+
+#define MODDIR	"/lib/modules"
+#define PCIMAP	"modules.pcimap"
+
+#define LINELENGTH	8000 
+
+#define DEVICE_ANY	0xffffffff
+#define VENDOR_ANY	0xffffffff
+
+#include "lib/pci.h"
+
+struct pcimap_entry {
+	unsigned int vendor, subsys_vendor, dev, subsys_dev, class, class_mask;
+	char *module;
+	struct pcimap_entry *next;
+};
+
+static struct pcimap_entry *pcimap_list = NULL;
+
+#define OPT_STRING "h"
+static struct option long_options[] = {
+	{"class",	required_argument,	NULL, 'c'},
+	{"classmask",	required_argument,	NULL, 'm'},
+	{"help",	no_argument,		NULL, 'h'},
+	{ 0,		0,			0, 	0}
+};
+
+static unsigned long desired_class;
+static unsigned long desired_classmask; /* Default is 0: accept all classes.*/
+
+void
+read_pcimap(void)
+{
+	struct utsname utsname;
+	char filename[MAXPATHLEN];
+	FILE *pcimap_file;
+	char line[LINELENGTH];
+	struct pcimap_entry *entry;
+	unsigned int driver_data;
+	char *prevmodule = "";
+	char module[LINELENGTH];
+
+	if (uname(&utsname) < 0) {
+		perror("uname");
+		exit(1);
+	}
+	sprintf(filename, "%s/%s/%s", MODDIR, utsname.release, PCIMAP);
+	if ((pcimap_file = fopen(filename, "r")) == NULL) {
+		perror(filename);
+		exit(1);
+	}
+
+	while(fgets(line, LINELENGTH, pcimap_file) != NULL) {
+		if (line[0] == '#')
+			continue;
+
+		entry = xmalloc(sizeof(struct pcimap_entry));
+
+		if (sscanf(line, "%s 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x",
+			   module,
+			   &entry->vendor, &entry->dev,
+			   &entry->subsys_vendor, &entry->subsys_dev,
+			   &entry->class, &entry->class_mask,
+			   &driver_data) != 8) {
+			fprintf (stderr,
+				"modules.pcimap unparsable line: %s.\n", line);
+			free(entry);
+			continue;
+		}
+
+		/* Optimize memory allocation a bit, in case someday we
+		   have Linux systems with ~100,000 modules.  It also
+		   allows us to just compare pointers to avoid trying
+		   to load a module twice. */
+		if (strcmp(module, prevmodule) != 0) {
+			prevmodule = xmalloc(strlen(module)+1);
+			strcpy(prevmodule, module);
+		}
+		entry->module = prevmodule;
+		entry->next = pcimap_list;
+		pcimap_list = entry;
+	}
+	fclose(pcimap_file);
+}
+
+/* Return a filled in pci_access->dev tree, with the device classes
+   stored in dev->aux.
+*/
+static void
+match_pci_modules(void)
+{
+	struct pci_access *pacc;
+	struct pci_dev *dev;
+	unsigned int class, subsys_dev, subsys_vendor;
+	struct pcimap_entry *map;
+	const char *prevmodule = "";
+
+	pacc = pci_alloc();		/* Get the pci_access structure */
+	/* Set all options you want -- here we stick with the defaults */
+	pci_init(pacc);		/* Initialize the PCI library */
+	pci_scan_bus(pacc);	/* We want to get the list of devices */
+  	for(dev=pacc->devices; dev; dev=dev->next) {
+		pci_fill_info(dev, PCI_FILL_IDENT | PCI_FILL_BASES);
+		class = (pci_read_word(dev, PCI_CLASS_DEVICE) << 8)
+			| pci_read_byte(dev, PCI_CLASS_PROG);
+		subsys_dev = pci_read_word(dev, PCI_SUBSYSTEM_ID);
+		subsys_vendor = pci_read_word(dev,PCI_SUBSYSTEM_VENDOR_ID);
+		for(map = pcimap_list; map != NULL; map = map->next) {
+			if (((map->class ^ class) & map->class_mask) == 0 &&
+			    ((desired_class ^ class) & desired_classmask)==0 &&
+			    (map->dev == DEVICE_ANY ||
+			     map->dev == dev->device_id) &&
+			    (map->vendor == VENDOR_ANY ||
+			     map->vendor == dev->vendor_id) &&
+			    (map->subsys_dev == DEVICE_ANY ||
+			     map->subsys_dev == subsys_dev) &&
+			    (map->subsys_vendor == VENDOR_ANY ||
+			     map->subsys_vendor == subsys_vendor) &&
+			    prevmodule != map->module) {
+				printf("%s\n", map->module);
+				prevmodule = map->module;
+			}
+		}
+
+	}
+	pci_cleanup(pacc);
+}
+
+int
+main (int argc, char **argv)
+{
+	int opt_index = 0;
+	int opt;
+
+	while ((opt = getopt_long(argc, argv, OPT_STRING, long_options,
+		           &opt_index)) != -1) {
+		switch(opt) {
+			case 'c':
+				desired_class = strtol(optarg, NULL, 0);
+				break;
+			case 'm':
+				desired_classmask = strtol(optarg, NULL, 0);
+				break;
+			case 'h':
+				printf ("Usage: pcimodules [--help]\n"
+					"  Lists kernel modules corresponding to PCI devices currently plugged"
+					"  into the computer.\n");
+		}
+	}	
+
+	read_pcimap();
+	match_pci_modules();
+	return 0;
+}
--- pciutils-3.1.2.orig/Makefile
+++ pciutils-3.1.2/Makefile
@@ -1,7 +1,7 @@
 # Makefile for The PCI Utilities
 # (c) 1998--2009 Martin Mares <mj@ucw.cz>
 
-OPT=-O2
+OPT=-O2 -g
 CFLAGS=$(OPT) -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes
 
 VERSION=3.1.2
@@ -52,7 +52,9 @@
 
 export
 
-all: lib/$(PCILIB) lspci setpci example lspci.8 setpci.8 pcilib.7 update-pciids update-pciids.8 $(PCI_IDS)
+pcimod-$(PCI_OS_LINUX) := pcimodules
+pcimod8-$(PCI_OS_LINUX) := pcimodules.8
+all: lib/$(PCILIB) lspci lspci-udeb setpci example lspci.8 setpci.8 pcilib.7 update-pciids update-pciids.8 $(PCI_IDS) $(pcimod-1) $(pcimod8-1)
 
 lib/$(PCILIB): $(PCIINC) force
 	$(MAKE) -C lib all
@@ -63,7 +65,9 @@
 	cd lib && ./configure
 
 lspci: lspci.o ls-vpd.o ls-caps.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/$(PCILIB)
+lspci-udeb: lspci.o ls-vpd.o ls-caps.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/libpci.a
 setpci: setpci.o common.o lib/$(PCILIB)
+pcimodules: pcimodules.o common.o lib/$(PCILIB)
 
 LSPCIINC=lspci.h pciutils.h $(PCIINC)
 lspci.o: lspci.c $(LSPCIINC)
@@ -75,10 +79,11 @@
 ls-map.o: ls-map.c $(LSPCIINC)
 
 setpci.o: setpci.c pciutils.h $(PCIINC)
+pcimodules.o: pcimodules.c pciutils.h $(PCIINC)
 common.o: common.c pciutils.h $(PCIINC)
 
 update-pciids: update-pciids.sh
-	sed <$< >$@ "s@^DEST=.*@DEST=$(IDSDIR)/$(PCI_IDS)@;s@^PCI_COMPRESSED_IDS=.*@PCI_COMPRESSED_IDS=$(PCI_COMPRESSED_IDS)@"
+	sed <$< >$@ "s@^FILE=.*@FILE=$(IDSDIR)/pci.ids@"
 	chmod +x $@
 
 # The example of use of libpci
@@ -88,12 +93,16 @@
 %: %.o
 	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LDLIBS) -o $@
 
+lspci-udeb: lspci.o
+	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LDLIBS) -lz -lresolv -o $@
+
 %.8 %.7: %.man
 	M=`echo $(DATE) | sed 's/-01-/-January-/;s/-02-/-February-/;s/-03-/-March-/;s/-04-/-April-/;s/-05-/-May-/;s/-06-/-June-/;s/-07-/-July-/;s/-08-/-August-/;s/-09-/-September-/;s/-10-/-October-/;s/-11-/-November-/;s/-12-/-December-/;s/\(.*\)-\(.*\)-\(.*\)/\3 \2 \1/'` ; sed <$< >$@ "s/@TODAY@/$$M/;s/@VERSION@/pciutils-$(VERSION)/;s#@IDSDIR@#$(IDSDIR)#"
 
 clean:
 	rm -f `find . -name "*~" -o -name "*.[oa]" -o -name "\#*\#" -o -name TAGS -o -name core -o -name "*.orig"`
 	rm -f update-pciids lspci setpci example lib/config.* *.[78] pci.ids.* lib/*.pc lib/*.so lib/*.so.*
+	rm -f pcimodules
 	rm -rf maint/dist
 
 distclean: clean
@@ -101,10 +110,11 @@
 install: all
 # -c is ignored on Linux, but required on FreeBSD
 	$(DIRINSTALL) -m 755 $(DESTDIR)$(SBINDIR) $(DESTDIR)$(IDSDIR) $(DESTDIR)$(MANDIR)/man8 $(DESTDIR)$(MANDIR)/man7
-	$(INSTALL) -c -m 755 $(STRIP) lspci setpci $(DESTDIR)$(SBINDIR)
+	$(INSTALL) -c -m 755 $(STRIP) lspci setpci $(pcimod-1) $(DESTDIR)$(SBINDIR)
+	$(INSTALL) -c -m 755 $(STRIP) lspci-udeb $(DESTDIR)-udeb$(SBINDIR)/lspci
 	$(INSTALL) -c -m 755 update-pciids $(DESTDIR)$(SBINDIR)
 	$(INSTALL) -c -m 644 $(PCI_IDS) $(DESTDIR)$(IDSDIR)
-	$(INSTALL) -c -m 644 lspci.8 setpci.8 update-pciids.8 $(DESTDIR)$(MANDIR)/man8
+	$(INSTALL) -c -m 644 lspci.8 setpci.8 update-pciids.8 $(pcimod8-1) $(DESTDIR)$(MANDIR)/man8
 	$(INSTALL) -c -m 644 pcilib.7 $(DESTDIR)$(MANDIR)/man7
 ifeq ($(SHARED),yes)
 	$(DIRINSTALL) -m 755 $(DESTDIR)$(LIBDIR)
@@ -123,8 +133,10 @@
 
 uninstall: all
 	rm -f $(DESTDIR)$(SBINDIR)/lspci $(DESTDIR)$(SBINDIR)/setpci $(DESTDIR)$(SBINDIR)/update-pciids
+	rm -f $(DESTDIR)-udeb$(SBINDIR)/lspci
 	rm -f $(DESTDIR)$(IDSDIR)/$(PCI_IDS)
 	rm -f $(DESTDIR)$(MANDIR)/man8/lspci.8 $(DESTDIR)$(MANDIR)/man8/setpci.8 $(DESTDIR)$(MANDIR)/man8/update-pciids.8
+	rm -f $(DESTDIR)$(SBINDIR)/pcimodules $(DESTDIR)$(MANDIR)/man8/pcimodules.8
 	rm -f $(DESTDIR)$(MANDIR)/man7/pcilib.7
 ifeq ($(SHARED),yes)
 	rm -f $(DESTDIR)$(LIBDIR)/$(PCILIB) $(DESTDIR)$(LIBDIR)/$(LIBNAME).so$(ABI_VERSION)
--- pciutils-3.1.2.orig/pci.ids
+++ pciutils-3.1.2/pci.ids
@@ -1,8 +1,8 @@
 #
 #	List of PCI ID's
 #
-#	Version: 2009.01.30
-#	Date:    2009-01-30 14:17:35
+#	Version: 2009.02.20
+#	Date:    2009-02-20 03:15:01
 #
 #	Maintained by Martin Mares <mj@ucw.cz> and other volunteers from the
 #	PCI ID Project at http://pciids.sf.net/.
@@ -610,12 +610,14 @@
 		103c 308b  MX6125
 		105b 0c81  Realtek ALC 653
 		107b 0300  MX6421
+		1462 0131  MS-1013 Notebook
 	4371  IXP SB400 PCI-PCI Bridge
 		103c 308b  MX6125
 		1462 7217  Aspire L250
 	4372  IXP SB400 SMBus Controller
 		1025 0080  Aspire 5024WLMMi
 		103c 308b  MX6125
+		1462 0131  MS-1013 Notebook
 		1462 7217  Aspire L250
 	4373  IXP SB400 USB2 Host Controller
 		1025 0080  Aspire 5024WLMMi
@@ -631,6 +633,7 @@
 	4376  IXP SB400 IDE Controller
 		1025 0080  Aspire 5024WLMMi
 		103c 308b  MX6125
+		1462 0131  MS-1013 Notebook
 		1462 7217  Aspire L250
 	4377  IXP SB400 PCI-ISA Bridge
 		1025 0080  Aspire 5024WLMi
@@ -639,6 +642,7 @@
 	4378  SB400 AC'97 Modem Controller
 		1025 0080  Aspire 5024WLMMi
 		103c 308b  MX6125
+		1462 0131  MS-1013 Notebook
 	4379  IXP SB400 Serial ATA Controller
 		1462 7141  Aspire L250
 	437a  IXP SB400 Serial ATA Controller
@@ -1169,6 +1173,7 @@
 		1025 0080  Aspire 5024WLMMi
 		103c 280a  DC5750 Microtower
 		103c 308b  MX6125
+		1462 0131  MS-1013 Notebook
 		1462 7217  Aspire L250
 	5951  Radeon Xpress 200 (RS480/RS482/RX480/RX482) Chipset - Host bridge
 	5952  RD580 [CrossFire Xpress 3200] Chipset Host Bridge
@@ -1177,6 +1182,7 @@
 	5955  Radeon XPRESS 200M 5955 (PCIE)
 		1002 5955  RS480 0x5955 [Radeon XPRESS 200M 5955 (PCIE)]
 		103c 308b  MX6125
+		1462 0131  MS-1013 Notebook
 	5956  RD790 Northbridge only dual slot PCI-e_GFX and HT3 K8 part
 	5957  RX780/RX790 Chipset Host Bridge
 	5958  RD780 Northbridge only dual slot PCI-e_GFX and HT1 K8 part
@@ -1484,6 +1490,7 @@
 	9443  R700 [Radeon HD 4850]
 	944a  M98L [Mobility Radeon HD 4850]
 	944c  RV770 LE [Radeon HD 4800 Series]
+	9450  RV770 [FireStream 9270]
 	9452  RV770 [FireStream 9250]
 	945a  M98 XT [Mobility Radeon HD 4870]
 	9480  M96 [Mobility Radeon HD 4650]
@@ -1516,6 +1523,7 @@
 	954f  RV710 [Radeon HD 4350]
 	9552  M92 LP [Mobility Radeon HD 4300 Series]
 	9553  M92 [Mobility Radeon HD 4500 Series]
+	9555  M93 [Mobility Radeon HD 4500 Series]
 	9559  Mobility Radeon HD 3600 Series
 	9581  M76 [Radeon Mobility HD 2600 Series]
 	9583  M76XT [Mobility Radeon HD 2600 XT]
@@ -1540,6 +1548,7 @@
 	95c5  Mobility Radeon HD 3450
 		1002 95c5  Mobility Radeon HD 3450
 	95c6  RV620 LE AGP [Radeon HD 3450]
+	95c9  RV620 PCI [Radeon HD 3450]
 	95cc  RV620 [ATI FireGL V3700]
 	95ce  RV620 [FirePro 2260]
 	95cf  RV620 [FirePro 2260]
@@ -1549,6 +1558,7 @@
 	9612  RS780M/RS780MN [Radeon HD 3200 Graphics]
 	9613  RS780MC [Radeon HD 3100 Graphics]
 	9614  Radeon HD 3300 Graphics
+	9615  RS780E [AMD 780E]
 	9616  760G [Radeon 3000]
 	aa00  R600 Audio Device [Radeon HD 2900 Series]
 	aa08  RV630/M76 audio device [Radeon HD 2600 Series]
@@ -4349,6 +4359,7 @@
 		10b5 3353  Alpermann+Velte PCL PCIe D: Timecode Reader Board
 		10b5 3354  Alpermann+Velte PCL PCIe LV: Timecode Reader Board
 		10b5 3355  Alpermann+Velte PCL PCIe L: Timecode Reader Board
+		10b5 3415  Alpermann+Velte PCIe TS: Time Synchronisation Board
 		1369 c001  LX6464ES
 		1369 c201  LX1616ES
 		14b4 d140  Dektec DTA-140
@@ -5801,27 +5812,39 @@
 	0533  GeForce 7000M (rev a2)
 	053a  GeForce 7050 PV / nForce 630a
 	053b  GeForce 7050 PV / nForce 630a
+		1043 8308  M2N68-AM Motherbord
 	053e  GeForce 7025
 	0541  MCP67 Memory Controller
 	0542  MCP67 SMBus
+		1043 8308  M2N68-AM Motherbord
 	0543  MCP67 Co-processor
 	0547  MCP67 Memory Controller
+		1043 8308  M2N68-AM Motherbord
 		1849 0547  ALiveNF7G-HDready
 	0548  MCP67 ISA Bridge
+		1043 8308  M2N68-AM Motherboard
 	054c  MCP67 Ethernet
+		1043 8308  M2N68-AM Motherbord
 		1849 054c  ALiveNF7G-HDready, MCP67 Gigabit Ethernet
 	054d  MCP67 Ethernet
 	054e  MCP67 Ethernet
 # forcedeth source code from Nvidi
 	054f  MCP67 Ethernet
 	0550  MCP67 AHCI Controller
+		1043 8308  M2N68-AM Motherboard
 	0554  MCP67 AHCI Controller
+		1043 8308  M2N68-AM Motherboard
 	0555  MCP67 SATA Controller
+		1043 8308  M2N68-AM Motherboard
 	055c  MCP67 High Definition Audio
+		1043 8290  M2N68-AM Motherboard
 	055d  MCP67 High Definition Audio
 	055e  MCP67 OHCI USB 1.1 Controller
+		1043 8308  M2N68-AM Motherboard
 	055f  MCP67 EHCI USB 2.0 Controller
+		1043 8308  M2N68-AM Motherboard
 	0560  MCP67 IDE Controller
+		f043 8308  M2N68-AM Motherboard
 	0561  MCP67 PCI Bridge
 	0562  MCP67 PCI Express Bridge
 		1849 0562  ALiveNF7G-HDready
@@ -5839,6 +5862,7 @@
 	05be  PCI express bridge for Quadro Plex S4 / Tesla S870 / Tesla S1070
 	05e1  GT200 [GTX280]
 	05e2  GT200 [GTX260-216]
+	05e3  GeForce GTX 285
 	05e7  GT200 [Tesla C1060 / Tesla S1070]
 	05f9  Quadro CX
 	05fd  Quadro FX 5800
@@ -5865,6 +5889,7 @@
 	0622  G94 [GeForce 9600 GT]
 		1458 3481  GV-NX96T512HP
 	0623  GeForce 9600 GS
+	0625  GeForce 9600 GSO
 	063a  Quadro FX 2700M
 	0640  GeForce 9500 GT
 	0641  D9M-20 [GeForce 9400 GT]
@@ -6068,6 +6093,8 @@
 	f0e5  Zephyr LightPulse Fibre Channel Host Adapter
 	f0f5  Neptune LightPulse Fibre Channel Host Adapter
 	f100  Saturn-X: LightPulse Fibre Channel Host Adapter
+	f111  Saturn-X LightPulse Fibre Channel Host Adapter
+	f112  Saturn-X LightPulse Fibre Channel Host Adapter
 	f700  LP7000 Fibre Channel Host Adapter
 	f701  LP7000 Fibre Channel Host Adapter Alternate ID (JX1:2-3, JX2:1-2)
 	f800  LP8000 Fibre Channel Host Adapter
@@ -6086,8 +6113,12 @@
 	fc40  Saturn-X: LightPulse Fibre Channel Host Adapter
 	fc50  Proteus-X: LightPulse IOV Fibre Channel Host Adapter
 	fd00  Helios-X LightPulse Fibre Channel Host Adapter
+	fd11  Helios-X LightPulse Fibre Channel Host Adapter
+	fd12  Helios-X LightPulse Fibre Channel Host Adapter
 	fe00  Zephyr-X LightPulse Fibre Channel Host Adapter
 	fe05  Zephyr-X: LightPulse FCoE Adapter
+	fe11  Zephyr-X LightPulse Fibre Channel Host Adapter
+	fe12  Zephyr-X LightPulse FCoE Adapter
 	ff00  Neptune LightPulse Fibre Channel Host Adapter
 10e0  Integrated Micro Solutions Inc.
 	5026  IMS5026/27/28
@@ -6203,7 +6234,6 @@
 		1043 8109  P5P800-MX Mainboard
 		1071 8160  MIM2000
 		10bd 0320  EP-320X-R
-		10ec 8139  RT8139
 		10f7 8338  Panasonic CF-Y5 laptop
 		1113 ec01  FNC-0107TX
 		1186 1300  DFE-538TX
@@ -6219,6 +6249,7 @@
 		1436 8139  RT8139
 		144d c00c  P30/P35 notebook
 		1458 e000  GA-7VM400M/7VT600 Motherboard
+		1462 0131  MS-1013 Notebook
 		1462 217c  Aspire L250
 		1462 788c  865PE Neo2-V Mainboard
 		146c 1439  FE-1439TX
@@ -6389,7 +6420,6 @@
 	7005  SB Audigy LS Game Port
 		1102 1001  SB0310 Audigy LS MIDI/Game port
 		1102 1002  SB0312 Audigy LS MIDI/Game port
-	8064  SB0100 [SBLive! 5.1 OEM]
 	8938  Ectiva EV1938
 		1033 80e5  SlimTower-Jim (NEC)
 		1071 7150  Mitac 7150
@@ -9787,6 +9817,9 @@
 	0302  TCR167PCI IRIG Timecode Reader
 	0303  TCR511PCI IRIG Timecode Reader
 	0304  TCR511PEX IRIG Timecode Reader (PCI Express)
+	0305  TCR170PEX IRIG Timecode Reader (PCI Express)
+	0501  PTP270PEX PTP/IEEE1588 slave card (PCI Express)
+	0601  FRC511PEX Free Running Clock (PCI Express)
 1361  Soliton Systems K.K.
 1362  Fujifacom Corporation
 1363  Phoenix Technology Ltd
@@ -10028,6 +10061,9 @@
 	0010  SyncLink Adapter v1
 	0020  SyncLink SCC Adapter
 	0030  SyncLink Multiport Adapter
+	0070  SyncLink GT Adapter
+	0080  SyncLink GT4 Adapter
+	00a0  SyncLink GT2 Adapter
 	0210  SyncLink Adapter v2
 13c1  3ware Inc
 	1000  5xxx/6xxx-series PATA-RAID
@@ -10152,6 +10188,7 @@
 		1043 82b7  Virtuoso 200 (Xonar D2X)
 		1043 8314  Virtuoso 200 (Xonar HDAV1.3)
 		1043 834f  Virtuoso 100 (Xonar D1)
+		1043 835c  Virtuoso 100 (Xonar Essence STX)
 		14c3 1710  HIFIER
 		1a58 0910  Barracuda AC-1
 		415a 5431  X-Meridian 7.1
@@ -11437,6 +11474,7 @@
 		18ac d820  DViCO FusionHDTV3 Gold-T
 		18ac db00  DVICO FusionHDTV DVB-T1
 	8852  CX23885 PCI Video and Audio Decoder
+		0070 8010  Hauppauge WinTV HVR-1400 ExpressCard
 		1461 c039  AVerTV Hybrid Express (A577)
 14f2  MOBILITY Electronics
 	0120  EV1000 bridge
@@ -12737,7 +12775,7 @@
 1a77  Lightfleet Corporation
 1a78  Virident Systems Inc.
 1a84  Commex Technologies
-	0001  Thunder 10 Gigabit ethernet
+	0001  Vulcan SP HT6210 10 Gigabit Ethernet (rev 02)
 1a8c  Verigy Pte. Ltd.
 	1100  E8001-66443 PCI Express CIC
 1a8e  DRS Technologies
@@ -12762,12 +12800,12 @@
 1af4  Qumranet, Inc.
 	1000  Virtio network device
 	1001  Virtio block device
+	1002  Virtio memory balloon
+	1003  Virtio console
 1af5  Netezza Corp.
 1afa  J & W Electronics Co., Ltd.
 1b13  Jaton Corp
 1b36  Red Hat, Inc.
-	1000  Virtio network device
-	1001  Virtio block device
 1b3e  Teradata Corp.
 	1fa8  BYNET BIC2SE/X
 		1b3e 00a3  BYNET BIC2SX
@@ -15224,6 +15262,7 @@
 		1462 7235  P965 Neo MS-7235 mainboard
 	2828  82801HBM/HEM (ICH8M/ICH8M-E) SATA IDE Controller
 		1028 01f3  Inspiron 1420
+		103c 30c0  Compaq 6710b
 		e4bf cc47  CCG-RUMBA
 	2829  82801HBM/HEM (ICH8M/ICH8M-E) SATA AHCI Controller
 		1025 0121  Aspire 5920G
@@ -16888,6 +16927,8 @@
 	a099  2000PV [Stingray]
 	a0a1  2000MT
 	a0a9  2000MI
+# Found on M2N68-AM Motherboard
+f043  ASUSTeK Computer Inc. (Wrong ID)
 f05b  Foxconn International, Inc. (Wrong ID)
 f1d0  AJA Video
 	c0fe  Xena HS/HD-R
--- pciutils-3.1.2.orig/lib/Makefile
+++ pciutils-3.1.2/lib/Makefile
@@ -42,18 +42,20 @@
 OBJS += nbsd-libpci
 endif
 
-all: $(PCILIB) $(PCILIBPC)
+PCILIBA=libpci.a
 
-ifeq ($(SHARED),no)
-$(PCILIB): $(addsuffix .o,$(OBJS))
+all: $(PCILIB) $(PCILIBA) $(PCILIBPC)
+
+#ifeq ($(SHARED),no)
+$(PCILIBA): $(addsuffix .o,$(OBJS))
 	rm -f $@
 	$(AR) rcs $@ $^
 	$(RANLIB) $@
-else
+#else
 CFLAGS += -fPIC -fvisibility=hidden
 $(PCILIB): $(addsuffix .o,$(OBJS))
 	$(CC) -shared $(LDFLAGS) $(SONAME) -Wl,--version-script=libpci.ver -o $@ $^ $(LIB_LDLIBS)
-endif
+#endif
 
 $(PCILIBPC): libpci.pc.in
 	sed <$< >$@ -e 's,@PREFIX@,$(PREFIX),' \
