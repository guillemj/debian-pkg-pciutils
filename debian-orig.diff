--- pciutils-3.1.4.orig/pcimodules.man
+++ pciutils-3.1.4/pcimodules.man
@@ -0,0 +1,92 @@
+.TH pcimodules 8 "@TODAY@" "@VERSION@" "Linux PCI Utilities"
+.IX pcimodules
+.SH NAME
+pcimodules \- List kernel driver modules available for all currently plugged
+in PCI devices
+.SH SYNOPSIS
+.B pcimodules
+.RB [ --class class_id ]
+.RB [ --classmask mask ]
+.RB [ --help ]
+.SH DESCRIPTION
+.B pcimodules
+lists all driver modules for all currently plugged in PCI devices.
+.B pcimodules
+should be run at boot time, and whenever a PCI device is "hot plugged"
+into the system.  This can be done by the following Bourne shell syntax:
+.IP
+	for module in $(pcimodules) ; do
+.IP
+		modprobe -s -k "$module"
+.IP
+	done
+.PP
+When a PCI device is removed from the system, the Linux kernel will
+decrement a usage count on PCI driver module.  If this count drops
+to zero (i.e., there are no PCI drivers), then the
+.B modprobe -r
+process that is normally configured to run from cron every few minutes
+will eventually remove the unneeded module.
+.PP
+The --class and --classmask arguments can be used to limit the search
+to certain classes of PCI devices.  This is useful, for example, to
+generate a list of ethernet card drivers to be loaded when the kernel
+has indicated that it is trying to resolve an unknown network interface.
+.PP
+Modules are listed in the order in which the PCI devices are physically
+arranged so that the computer owner can arrange things like having scsi
+device 0 be on a controller that is not alphabetically the first scsi
+controller.
+.SH OPTIONS
+.TP
+.B --class class --classmask mask
+.PP
+--class and --classmask limit the search to PCI
+cards in particular classes.  These arguments are always used together.
+The arguments to --class and --classmask
+can be given as hexadecimal numbers by prefixing a leading "0x".
+Note that the classes used by pcimodules are in "Linux" format,
+meaning the class value that you see with lspci would be shifted
+left eight bits, with the new low eight bits programming interface ID.
+An examples of how to use class and classmask is provided below.
+.B --help, -h
+Print a help message and exit.
+.SH EXAMPLES
+.TP
+pcimodules
+lists all modules corresponding to currently plugged in PCI devices.
+.TP
+pcimodules --class 0x20000 --classmask 0xffff00
+lists all modules corresponding to currently plugged in ethernet PCI devices.
+.SH FILES
+.TP
+.B /lib/modules/<kernel-version>/modules.pcimap
+This file is automatically generated by
+.B depmod,
+and used by
+.B pcimodules
+to determine which modules correspond to which PCI ID's.
+.TP
+.B /proc/bus/pci
+An interface to PCI bus configuration space provided by the post-2.1.82 Linux
+kernels. Contains per-bus subdirectories with per-card config space files and a
+.I devices
+file containing a list of all PCI devices.
+
+.SH SEE ALSO
+.BR lspci (8)
+
+.SH MAINTAINER
+The Linux PCI Utilities are maintained by Martin Mares <mj@suse.cz>.
+
+.SH AUTHOR
+.B pcimodules
+was written by Adam J. Richter <adam@yggdrasil.com>, based on public
+domain example code by Martin Mares <mj@suse.cz>.
+
+.SH COPYRIGHT
+.B pcimodules
+is copyright 2000, Yggdrasil Computing, Incorporated, and may
+be copied under the terms and conditions of version 2 of the GNU
+General Public License as published by the Free Software Foundation
+(Cambridge, Massachusetts, United States of America).
--- pciutils-3.1.4.orig/setpci.man
+++ pciutils-3.1.4/setpci.man
@@ -124,7 +124,7 @@
 .I data
 and
 .I mask
-are hexdecimal numbers. In the latter case, only the bits corresponding to binary
+are hexadecimal numbers. In the latter case, only the bits corresponding to binary
 ones in the \fImask\fP are changed (technically, this is a read-modify-write operation).
 
 .PP
--- pciutils-3.1.4.orig/update-pciids.sh
+++ pciutils-3.1.4/update-pciids.sh
@@ -1,75 +1,131 @@
 #!/bin/sh
 
-[ "$1" = "-q" ] && quiet=true || quiet=false
+# update-pciids.sh is licensed under the GNU General Public License
+# (GPL) version 2 or above.
+# 
+# Copyright (C) 2008  Anibal Monsalve Salazar <anibal@debian.org>
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 2 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# Please read the "COPYING" file in the archive root, or visit
+# http://www.gnu.org/licenses/gpl.html, for information about the GPL.
+#
+# This scipt is a rewrite of a script with the same name by
+# Martin Mares.
 
 set -e
-SRC="http://pciids.sourceforge.net/v2.2/pci.ids"
-DEST=pci.ids
-PCI_COMPRESSED_IDS=
-GREP=grep
-
-# if pci.ids is read-only (because the filesystem is read-only),
-# then just skip this whole process.
-if ! touch ${DEST} >/dev/null 2>&1 ; then
-	${quiet} || echo "${DEST} is read-only, exiting." 1>&2
-	exit 1
-fi
-
-if [ -n "$PCI_COMPRESSED_IDS" ] ; then
-	DECOMP="cat"
-	SRC="$SRC.gz"
-	GREP=zgrep
-elif which bzip2 >/dev/null 2>&1 ; then
-	DECOMP="bzip2 -d"
-	SRC="$SRC.bz2"
-elif which gzip >/dev/null 2>&1 ; then
-	DECOMP="gzip -d"
-	SRC="$SRC.gz"
+
+#URL="http://pci-ids.ucw.cz/pci.ids"
+URL="http://pciids.sourceforge.net/v2.2/pci.ids"
+FILE="pci.ids"
+
+RM="/bin/rm"
+MV="/bin/mv"
+SED="/bin/sed"
+GREP="/bin/grep"
+GZIP="/bin/gzip"
+ECHO="/bin/echo"
+CHMOD="/bin/chmod"
+CHOWN="/bin/chown"
+GUNZIP="/bin/gunzip"
+BUNZIP2="/bin/bunzip2"
+TOUCH="/usr/bin/touch"
+WGET="/usr/bin/wget"
+CURL="/usr/bin/curl"
+LYNX="/usr/bin/lynx"
+
+NEWFILE="$FILE.new"
+OLDFILE="$FILE.old"
+
+if [ "$1" = "-q" ]
+then
+    quiet="yes"
 else
-	DECOMP="cat"
+    quiet="no"
 fi
 
-if which curl >/dev/null 2>&1 ; then
-	DL="curl -o $DEST.new $SRC"
-    ${quiet} && DL="$DL -s -S"
-elif which wget >/dev/null 2>&1 ; then
-	DL="wget --no-timestamping -O $DEST.new $SRC"
-	${quiet} && DL="$DL -q"
-elif which lynx >/dev/null 2>&1 ; then
-	DL="eval lynx -source $SRC >$DEST.new"
+if ! $TOUCH $NEWFILE > /dev/null 2>&1
+then
+    $ECHO >&2 "update-pciids: $NEWFILE is read-only"
+    exit 1
+fi
+
+[ -f $NEWFILE ]     && $RM $NEWFILE
+[ -f $NEWFILE.bz2 ] && $RM $NEWFILE.bz2
+[ -f $NEWFILE.gz ]  && $RM $NEWFILE.gz
+
+if [ -x $BUNZIP2 ]
+then
+    EXT=".bz2"
+    UNZIP=$BUNZIP2
+elif [ -x $GUNZIP ]
+then
+    EXT=".gz"
+    UNZIP=$GUNZIP
 else
-	echo >&2 "update-pciids: cannot find curl, wget or lynx"
-	exit 1
+    $ECHO >&2 "update-pciids: cannot find bunzip2 or gunzip"
+    exit 1
 fi
 
-if ! $DL ; then
-	echo >&2 "update-pciids: download failed"
-	rm -f $DEST.new
-	exit 1
+if [ -x $WGET ]
+then
+    $WGET -nv -O $NEWFILE$EXT $URL$EXT > /dev/null 2>&1
+elif [ -x $CURL ]
+then
+    $CURL -o $NEWFILE$EXT $URL$EXT > /dev/null 2>&1
+elif [ -x $LYNX ]
+then
+    $LYNX -source $URL$EXT > $NEWFILE$EXT
+else
+    $ECHO >&2 "update-pciids: cannot find wget, curl or lynx"
+    exit 1
 fi
 
-if ! $DECOMP <$DEST.new >$DEST.neww ; then
-	echo >&2 "update-pciids: decompression failed, probably truncated file"
-	exit 1
+$UNZIP < $NEWFILE$EXT > $NEWFILE
+$RM $NEWFILE$EXT
+
+if ! $GREP > /dev/null "^C " $NEWFILE
+then
+    $ECHO >&2 "update-pciids: missing class info, probably truncated file"
+    exit 1
 fi
 
-if ! $GREP >/dev/null "^C " $DEST.neww ; then
-	echo >&2 "update-pciids: missing class info, probably truncated file"
-	exit 1
+date=$( $GREP -E "^#[[:space:]]Date:[[:space:]]*" $NEWFILE 2> /dev/null | $SED "s/^#[[:space:]]Date:[[:space:]]*//" )
+
+if [ -z "$date" ]
+then
+    $ECHO >&2 "update-pciids: missing snapshot date, probably truncated file"
+    exit 1
+fi 
+
+if [ -f $FILE ]
+then
+    $CHOWN --reference="$FILE" "$NEWFILE"
+    $CHMOD --reference="$FILE" "$NEWFILE"
+    [ -f $OLDFILE ] && $RM $OLDFILE
+    $MV $FILE $OLDFILE
 fi
 
-if [ -f $DEST ] ; then
-	mv $DEST $DEST.old
-	# --reference is supported only by chmod from GNU file, so let's ignore any errors
-	chmod -f --reference=$DEST.old $DEST.neww 2>/dev/null || true
+$MV $NEWFILE $FILE
+$TOUCH -d "$date" $FILE
+
+if [ -f $FILE.gz ]
+then
+    [ -f $OLDFILE.gz ] && $RM $OLDFILE.gz
+    $MV $FILE.gz $OLDFILE.gz
 fi
-mv $DEST.neww $DEST
-rm $DEST.new
 
-# Older versions did not compress the ids file, so let's make sure we
-# clean that up.
-if [ ${DEST%.gz} != ${DEST} ] ; then
-	rm -f ${DEST%.gz} ${DEST%.gz}.old
+if [ $quiet = "no" ]
+then
+    $ECHO "Downloaded daily snapshot dated $date"
 fi
 
-${quiet} || echo "Done."
+exit 0
--- pciutils-3.1.4.orig/pcimodules.c
+++ pciutils-3.1.4/pcimodules.c
@@ -0,0 +1,185 @@
+/*
+ *	pcimodules:  Load all kernel modules for PCI device currently
+ *      plugged into any PCI slot.
+ *
+ *	Copyright 2000 Yggdrasil Computing, Incorporated
+ *	This file may be copied under the terms and conditions of version 
+ *      two of the GNU General Public License, as published by the Free
+ *      Software Foundation (Cambridge, Massachusetts, USA).
+ *
+ *      This file is based on pciutils/lib/example.c, which has the following
+ *      authorship and copyright statement:
+ *
+ *		Written by Martin Mares and put to public domain. You can do
+ *		with it anything you want, but I don't give you any warranty.
+ */
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <malloc.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/utsname.h>
+#include <sys/param.h>
+#include <sys/types.h>
+
+#define _GNU_SOURCE
+#include <getopt.h>
+
+#include "pciutils.h"
+
+const char program_name[] = "pcimodules";
+
+#define MODDIR	"/lib/modules"
+#define PCIMAP	"modules.pcimap"
+
+#define LINELENGTH	8000 
+
+#define DEVICE_ANY	0xffffffff
+#define VENDOR_ANY	0xffffffff
+
+#include "lib/pci.h"
+
+struct pcimap_entry {
+	unsigned int vendor, subsys_vendor, dev, subsys_dev, class, class_mask;
+	char *module;
+	struct pcimap_entry *next;
+};
+
+static struct pcimap_entry *pcimap_list = NULL;
+
+#define OPT_STRING "h"
+static struct option long_options[] = {
+	{"class",	required_argument,	NULL, 'c'},
+	{"classmask",	required_argument,	NULL, 'm'},
+	{"help",	no_argument,		NULL, 'h'},
+	{ 0,		0,			0, 	0}
+};
+
+static unsigned long desired_class;
+static unsigned long desired_classmask; /* Default is 0: accept all classes.*/
+
+void
+read_pcimap(void)
+{
+	struct utsname utsname;
+	char filename[MAXPATHLEN];
+	FILE *pcimap_file;
+	char line[LINELENGTH];
+	struct pcimap_entry *entry;
+	unsigned int driver_data;
+	char *prevmodule = "";
+	char module[LINELENGTH];
+
+	if (uname(&utsname) < 0) {
+		perror("uname");
+		exit(1);
+	}
+	sprintf(filename, "%s/%s/%s", MODDIR, utsname.release, PCIMAP);
+	if ((pcimap_file = fopen(filename, "r")) == NULL) {
+		perror(filename);
+		exit(1);
+	}
+
+	while(fgets(line, LINELENGTH, pcimap_file) != NULL) {
+		if (line[0] == '#')
+			continue;
+
+		entry = xmalloc(sizeof(struct pcimap_entry));
+
+		if (sscanf(line, "%s 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x",
+			   module,
+			   &entry->vendor, &entry->dev,
+			   &entry->subsys_vendor, &entry->subsys_dev,
+			   &entry->class, &entry->class_mask,
+			   &driver_data) != 8) {
+			fprintf (stderr,
+				"modules.pcimap unparsable line: %s.\n", line);
+			free(entry);
+			continue;
+		}
+
+		/* Optimize memory allocation a bit, in case someday we
+		   have Linux systems with ~100,000 modules.  It also
+		   allows us to just compare pointers to avoid trying
+		   to load a module twice. */
+		if (strcmp(module, prevmodule) != 0) {
+			prevmodule = xmalloc(strlen(module)+1);
+			strcpy(prevmodule, module);
+		}
+		entry->module = prevmodule;
+		entry->next = pcimap_list;
+		pcimap_list = entry;
+	}
+	fclose(pcimap_file);
+}
+
+/* Return a filled in pci_access->dev tree, with the device classes
+   stored in dev->aux.
+*/
+static void
+match_pci_modules(void)
+{
+	struct pci_access *pacc;
+	struct pci_dev *dev;
+	unsigned int class, subsys_dev, subsys_vendor;
+	struct pcimap_entry *map;
+	const char *prevmodule = "";
+
+	pacc = pci_alloc();		/* Get the pci_access structure */
+	/* Set all options you want -- here we stick with the defaults */
+	pci_init(pacc);		/* Initialize the PCI library */
+	pci_scan_bus(pacc);	/* We want to get the list of devices */
+  	for(dev=pacc->devices; dev; dev=dev->next) {
+		pci_fill_info(dev, PCI_FILL_IDENT | PCI_FILL_BASES);
+		class = (pci_read_word(dev, PCI_CLASS_DEVICE) << 8)
+			| pci_read_byte(dev, PCI_CLASS_PROG);
+		subsys_dev = pci_read_word(dev, PCI_SUBSYSTEM_ID);
+		subsys_vendor = pci_read_word(dev,PCI_SUBSYSTEM_VENDOR_ID);
+		for(map = pcimap_list; map != NULL; map = map->next) {
+			if (((map->class ^ class) & map->class_mask) == 0 &&
+			    ((desired_class ^ class) & desired_classmask)==0 &&
+			    (map->dev == DEVICE_ANY ||
+			     map->dev == dev->device_id) &&
+			    (map->vendor == VENDOR_ANY ||
+			     map->vendor == dev->vendor_id) &&
+			    (map->subsys_dev == DEVICE_ANY ||
+			     map->subsys_dev == subsys_dev) &&
+			    (map->subsys_vendor == VENDOR_ANY ||
+			     map->subsys_vendor == subsys_vendor) &&
+			    prevmodule != map->module) {
+				printf("%s\n", map->module);
+				prevmodule = map->module;
+			}
+		}
+
+	}
+	pci_cleanup(pacc);
+}
+
+int
+main (int argc, char **argv)
+{
+	int opt_index = 0;
+	int opt;
+
+	while ((opt = getopt_long(argc, argv, OPT_STRING, long_options,
+		           &opt_index)) != -1) {
+		switch(opt) {
+			case 'c':
+				desired_class = strtol(optarg, NULL, 0);
+				break;
+			case 'm':
+				desired_classmask = strtol(optarg, NULL, 0);
+				break;
+			case 'h':
+				printf ("Usage: pcimodules [--help]\n"
+					"  Lists kernel modules corresponding to PCI devices currently plugged"
+					"  into the computer.\n");
+		}
+	}	
+
+	read_pcimap();
+	match_pci_modules();
+	return 0;
+}
--- pciutils-3.1.4.orig/Makefile
+++ pciutils-3.1.4/Makefile
@@ -1,7 +1,7 @@
 # Makefile for The PCI Utilities
 # (c) 1998--2009 Martin Mares <mj@ucw.cz>
 
-OPT=-O2
+OPT=-O2 -g
 CFLAGS=$(OPT) -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes
 
 VERSION=3.1.4
@@ -52,7 +52,9 @@
 
 export
 
-all: lib/$(PCILIB) lspci setpci example lspci.8 setpci.8 pcilib.7 update-pciids update-pciids.8 $(PCI_IDS)
+pcimod-$(PCI_OS_LINUX) := pcimodules
+pcimod8-$(PCI_OS_LINUX) := pcimodules.8
+all: lib/$(PCILIB) lspci lspci-udeb setpci example lspci.8 setpci.8 pcilib.7 update-pciids update-pciids.8 $(PCI_IDS) $(pcimod-1) $(pcimod8-1)
 
 lib/$(PCILIB): $(PCIINC) force
 	$(MAKE) -C lib all
@@ -63,7 +65,9 @@
 	cd lib && ./configure
 
 lspci: lspci.o ls-vpd.o ls-caps.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/$(PCILIB)
+lspci-udeb: lspci.o ls-vpd.o ls-caps.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/libpci.a
 setpci: setpci.o common.o lib/$(PCILIB)
+pcimodules: pcimodules.o common.o lib/$(PCILIB)
 
 LSPCIINC=lspci.h pciutils.h $(PCIINC)
 lspci.o: lspci.c $(LSPCIINC)
@@ -75,10 +79,11 @@
 ls-map.o: ls-map.c $(LSPCIINC)
 
 setpci.o: setpci.c pciutils.h $(PCIINC)
+pcimodules.o: pcimodules.c pciutils.h $(PCIINC)
 common.o: common.c pciutils.h $(PCIINC)
 
 update-pciids: update-pciids.sh
-	sed <$< >$@ "s@^DEST=.*@DEST=$(IDSDIR)/$(PCI_IDS)@;s@^PCI_COMPRESSED_IDS=.*@PCI_COMPRESSED_IDS=$(PCI_COMPRESSED_IDS)@"
+	sed <$< >$@ "s@^FILE=.*@FILE=$(IDSDIR)/pci.ids@"
 	chmod +x $@
 
 # The example of use of libpci
@@ -88,12 +93,16 @@
 %: %.o
 	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LDLIBS) -o $@
 
+lspci-udeb: lspci.o
+	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LDLIBS) -lz -lresolv -o $@
+
 %.8 %.7: %.man
 	M=`echo $(DATE) | sed 's/-01-/-January-/;s/-02-/-February-/;s/-03-/-March-/;s/-04-/-April-/;s/-05-/-May-/;s/-06-/-June-/;s/-07-/-July-/;s/-08-/-August-/;s/-09-/-September-/;s/-10-/-October-/;s/-11-/-November-/;s/-12-/-December-/;s/\(.*\)-\(.*\)-\(.*\)/\3 \2 \1/'` ; sed <$< >$@ "s/@TODAY@/$$M/;s/@VERSION@/pciutils-$(VERSION)/;s#@IDSDIR@#$(IDSDIR)#"
 
 clean:
 	rm -f `find . -name "*~" -o -name "*.[oa]" -o -name "\#*\#" -o -name TAGS -o -name core -o -name "*.orig"`
 	rm -f update-pciids lspci setpci example lib/config.* *.[78] pci.ids.* lib/*.pc lib/*.so lib/*.so.*
+	rm -f pcimodules
 	rm -rf maint/dist
 
 distclean: clean
@@ -101,10 +110,11 @@
 install: all
 # -c is ignored on Linux, but required on FreeBSD
 	$(DIRINSTALL) -m 755 $(DESTDIR)$(SBINDIR) $(DESTDIR)$(IDSDIR) $(DESTDIR)$(MANDIR)/man8 $(DESTDIR)$(MANDIR)/man7
-	$(INSTALL) -c -m 755 $(STRIP) lspci setpci $(DESTDIR)$(SBINDIR)
+	$(INSTALL) -c -m 755 $(STRIP) lspci setpci $(pcimod-1) $(DESTDIR)$(SBINDIR)
+	$(INSTALL) -c -m 755 $(STRIP) lspci-udeb $(DESTDIR)-udeb$(SBINDIR)/lspci
 	$(INSTALL) -c -m 755 update-pciids $(DESTDIR)$(SBINDIR)
 	$(INSTALL) -c -m 644 $(PCI_IDS) $(DESTDIR)$(IDSDIR)
-	$(INSTALL) -c -m 644 lspci.8 setpci.8 update-pciids.8 $(DESTDIR)$(MANDIR)/man8
+	$(INSTALL) -c -m 644 lspci.8 setpci.8 update-pciids.8 $(pcimod8-1) $(DESTDIR)$(MANDIR)/man8
 	$(INSTALL) -c -m 644 pcilib.7 $(DESTDIR)$(MANDIR)/man7
 ifeq ($(SHARED),yes)
 	$(DIRINSTALL) -m 755 $(DESTDIR)$(LIBDIR)
@@ -123,8 +133,10 @@
 
 uninstall: all
 	rm -f $(DESTDIR)$(SBINDIR)/lspci $(DESTDIR)$(SBINDIR)/setpci $(DESTDIR)$(SBINDIR)/update-pciids
+	rm -f $(DESTDIR)-udeb$(SBINDIR)/lspci
 	rm -f $(DESTDIR)$(IDSDIR)/$(PCI_IDS)
 	rm -f $(DESTDIR)$(MANDIR)/man8/lspci.8 $(DESTDIR)$(MANDIR)/man8/setpci.8 $(DESTDIR)$(MANDIR)/man8/update-pciids.8
+	rm -f $(DESTDIR)$(SBINDIR)/pcimodules $(DESTDIR)$(MANDIR)/man8/pcimodules.8
 	rm -f $(DESTDIR)$(MANDIR)/man7/pcilib.7
 ifeq ($(SHARED),yes)
 	rm -f $(DESTDIR)$(LIBDIR)/$(PCILIB) $(DESTDIR)$(LIBDIR)/$(LIBNAME).so$(ABI_VERSION)
--- pciutils-3.1.4.orig/pci.ids
+++ pciutils-3.1.4/pci.ids
@@ -1,8 +1,8 @@
 #
 #	List of PCI ID's
 #
-#	Version: 2009.08.14
-#	Date:    2009-08-14 14:32:03
+#	Version: 2009.09.18
+#	Date:    2009-09-18 03:15:01
 #
 #	Maintained by Martin Mares <mj@ucw.cz> and other volunteers from the
 #	PCI ID Project at http://pciids.sf.net/.
@@ -22,7 +22,7 @@
 #		subvendor subdevice  subsystem_name	<-- two tabs
 
 0000  Gammagraphx, Inc. (or missing ID)
-0010  Allied Telesyn International
+0010  Allied Telesis, Inc
 # This is a relabelled RTL-8139
 	8139  AT-2500TX V3 Ethernet
 001a  Ascend Communications, Inc.
@@ -409,6 +409,10 @@
 	0065  SAS2116 PCI-Express Fusion-MPT SAS-2 [Meteor]
 	0070  SAS2004 PCI-Express Fusion-MPT SAS-2 [Spitfire]
 	0072  SAS2008 PCI-Express Fusion-MPT SAS-2 [Falcon]
+		1028 1f1c  6Gbps SAS HBA Adapter
+		1028 1f1d  PERC H200 Adapter
+		1028 1f1e  PERC H200 Integrated
+		1028 1f1f  PERC H200 Modular
 	0073  MegaRAID SAS 9240
 		1000 9240  MegaRAID SAS 9240-4i
 	0074  SAS2108 PCI-Express Fusion-MPT SAS-2 [Liberator]
@@ -426,6 +430,14 @@
 		1028 1f1b  PERC H700 Integrated
 	007c  MegaRAID SAS 1078DE
 		1014 0395  ServeRAID-AR10is SAS/SATA Controller
+	0080  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0081  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0082  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0083  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0084  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0085  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0086  SAS2208 PCI-Express Fusion-MPT SAS-2
+	0087  SAS2208 PCI-Express Fusion-MPT SAS-2
 	008f  53c875J
 		1092 8000  FirePort 40 SCSI Controller
 		1092 8760  FirePort 40 Dual SCSI Host Adapter
@@ -1515,12 +1527,14 @@
 	945a  M98 XT [Mobility Radeon HD 4870]
 	9460  RV790 [Radeon HD 4800 Series]
 	9480  M96 [Mobility Radeon HD 4650]
+		103c 3628  ATI Mobility Radeon HD 4650 [dv6-1190en]
 	9489  M96 XT [Mobility FireGL V5725]
 	9490  RV730XT [Radeon HD 4670]
 		174b e880  Radeon HD 4670 512MB DDR3
 	9491  M96 CSP [ATI RADEON E4690]
 	9495  HD 4650
 		1002 9495  RV730 XT [PowerColor Radeon HD4670 AGP 1GB DDR]
+		1458 0028  HD4650
 	9498  RV730 PRO [Radeon HD 4650]
 	949f  RV730 [FirePro V5700]
 	94a0  Mobility Radeon HD 4830 [M97]
@@ -1587,6 +1601,7 @@
 	95cf  RV620 [FirePro 2260]
 	960f  RS780 Azalia controller
 	9610  Radeon HD 3200 Graphics
+		1458 d000  GA-MA78GM-S2H Motherboard
 	9611  Radeon 3100 Graphics
 	9612  RS780M/RS780MN [Radeon HD 3200 Graphics]
 	9613  RS780MC [Radeon HD 3100 Graphics]
@@ -1604,6 +1619,7 @@
 	aa30  HD48x0 audio
 		174b aa30  Sapphire HD 4850 512MB GDDR3 PCI-E Dual Slot Fansink
 	aa38  R700 Audio Device [Radeon HD 4000 Series]
+		103c 3628  ATI RV710/730 [dv6-1190en]
 		174b aa38  R700 Audio Device [Radeon HD 4000 Series]
 	ac00  Theater 600 Pro
 	cab0  AGP Bridge [IGP 320M]
@@ -1992,6 +2008,16 @@
 		1014 030a  PCIe 3Gb SAS RAID Adapter (574E)
 		1014 033a  PCIe 3Gb SAS Adapter (57B3)
 		1014 0360  PCI-E Auxiliary Cache Adapter (57B7)
+	033d  PCI-E IPR SAS Adapter (FPGA)
+		1014 033c  PCIe2 1.8GB Cache 6Gb SAS RAID Adapter Tri-port (57B5)
+		1014 0356  PCIe2 1.8GB Cache 6Gb SAS RAID & SSD Adapter (574D)
+		1014 035f  PCIe2 6Gb SAS Adapter Quad-port (57B2)
+	034a  PCI-E IPR SAS Adapter (ASIC)
+		1014 033b  PCIe2 6Gb SAS RAID Adapter Quad-port (57B4)
+		1014 0355  PCIe2 3.6GB Cache 6Gb SAS RAID Adapter Quad-port (57B1)
+		1014 0357  PCIe2 6Gb SAS Adapter Quad-port (57C6)
+		1014 035d  PCIe2 3.6GB Cache 6Gb SAS RAID & SSD Adapter (575D)
+		1014 035e  PCIe2 3.6GB Cache 6Gb SAS RAID Adapter Quad-port (57CE)
 	3022  QLA3022 Network Adapter
 	4022  QLA3022 Network Adapter
 	ffff  MPIC-2 interrupt controller
@@ -3538,6 +3564,7 @@
 		105a b600  SuperTrak EX16650
 		105a b601  SuperTrak EX16654
 		105a b602  SuperTrak EX16658
+	8760  PM8010 [SuperTrak EX SAS and SATA 6G RAID Controller]
 	c350  80333 [SuperTrak EX12350]
 	e350  80333 [SuperTrak EX24350]
 105b  Foxconn International, Inc.
@@ -3611,6 +3638,7 @@
 1062  Maspar Computer Corp
 1063  Ocean Office Automation
 1064  Alcatel
+	1102  Dynamite 2840 (ADSL PCI modem)
 1065  Texas Microsystems
 1066  PicoPower Technology
 	0000  PT80C826
@@ -3799,6 +3827,7 @@
 	6312  SP202-based 2Gb Fibre Channel to PCI-X HBA
 	6322  SP212-based 2Gb Fibre Channel to PCI-X HBA
 	7220  IBA7220 InfiniBand HCA
+	7322  IBA7322 QDR InfiniBand HCA
 	8000  10GbE Converged Network Adapter (TCP/IP Networking)
 	8001  10GbE Converged Network Adapter (FCoE)
 	8432  ISP2432M-based 10GbE Converged Network Adapter (CNA)
@@ -3824,6 +3853,7 @@
 	204d  [GeForce 7800 GTX] Winfast PX7800 GTX TDH
 	2134  WinFast 3D S320 II
 	2971  [GeForce FX 5900] WinFast A350 TDH MyViVo
+	6609  Winfast TV 2000 XP RM
 	6654  Conexant CX23883 [WinFast DTV1800 H]
 107e  Interphase Corporation
 	0001  5515 ATM Adapter [Flipper]
@@ -5768,6 +5798,7 @@
 	03d1  C61 [GeForce 6100 nForce 405]
 	03d2  C61 [GeForce 6100 nForce 400]
 	03d5  C61 [GeForce 6100 nForce 420]
+	03d6  C61 [GeForce 7025 / nForce 630a]
 	03e0  MCP61 LPC Bridge
 		1849 03e0  939NF6G-VSTA Board
 	03e1  MCP61 LPC Bridge
@@ -5818,6 +5849,7 @@
 	040a  G84 [Quadro FX 370]
 	040b  Quadro NVS 320M
 	040c  Quadro FX 570M
+		17aa 20d9  ThinkPad T61p
 	040d  Quadro FX 1600M
 	040e  G84 [Quadro FX 570]
 	040f  G84 [Quadro FX 1700]
@@ -6180,6 +6212,9 @@
 	087a  C79 [Quadro FX 470]
 	087d  ION VGA
 	087f  C79 [Quadro FX 470M]
+	0a20  GT200 [GeForce GT 220]
+	0a60  GT200 [GeForce G210]
+	0a65  GT200 [GeForce 210]
 	0a80  MCP79 Host Bridge
 	0a81  MCP79 Host Bridge
 	0a82  MCP79 Host Bridge
@@ -6454,6 +6489,7 @@
 		1385 311a  GA311
 		1458 e000  GA-8I915ME-G Mainboard
 		1462 030c  K8N Neo-FSR v2.0 mainboard
+		1462 065c  Hetis 865GV-E (MS-7065)
 		1462 702c  K8T NEO 2 motherboard
 		1462 7094  K8T Neo2-F V2.0
 		16ec 011f  USR997903
@@ -6574,6 +6610,7 @@
 		1102 4004  EMU1010 Digital Audio System [MAEM8960]
 	0009  [SB X-Fi Xtreme Audio] CA0110-IBG
 		1102 0010  [SB X-Fi Xtreme Audio] CA0110-IBG
+		1102 0018  SB1040
 	000b  X-Fi Titanium series [EMU20k2]
 		1102 0041  SB X-Fi Titanium PCI-e [SB0880]
 	4001  SB Audigy FireWire Port
@@ -6587,6 +6624,7 @@
 	7005  SB Audigy LS Game Port
 		1102 1001  SB0310 Audigy LS MIDI/Game port
 		1102 1002  SB0312 Audigy LS MIDI/Game port
+	7006  [SB X-Fi Xtreme Audio] CA0110-IBG PCI to PCIe Bridge
 	8938  Ectiva EV1938
 		1033 80e5  SlimTower-Jim (NEC)
 		1071 7150  Mitac 7150
@@ -10403,8 +10441,12 @@
 		1043 8275  Virtuoso 100 (Xonar DX)
 		1043 82b7  Virtuoso 200 (Xonar D2X)
 		1043 8314  Virtuoso 200 (Xonar HDAV1.3)
+		1043 8327  Virtuoso 100 (Xonar DX)
 		1043 834f  Virtuoso 100 (Xonar D1)
 		1043 835c  Virtuoso 100 (Xonar Essence STX)
+		1043 835d  Virtuoso 100 (Xonar ST)
+		1043 835e  Virtuoso 200 (Xonar HDAV1.3 Slim)
+		1043 838e  Virtuoso 200 (Xonar DS)
 		14c3 1710  HIFIER
 		1a58 0910  Barracuda AC-1
 		415a 5431  X-Meridian 7.1
@@ -10780,6 +10822,7 @@
 	7242  K9AGM RS485 Motherboard
 	7250  MS-7250 Motherboard [K9N Platinum SLI/non-SLI]
 	7327  K9AGM2-FIH Motherboard
+	7650  Hetis 865GV-E (MS-7065)
 	8725  NVIDIA NV25 [GeForce4 Ti 4600] VGA Adapter
 	9000  NVIDIA NV28 [GeForce4 Ti 4800] VGA Adapter
 	9110  GeFORCE FX5200
@@ -11016,6 +11059,7 @@
 		103c 3015  PCIe LAN on Motherboard
 		107b 5048  E4500 Onboard
 	1601  NetXtreme BCM5752M Gigabit Ethernet PCI Express
+	1612  BCM70012 Video Decoder [Crystal HD]
 	1639  NetXtreme II BCM5709 Gigabit Ethernet
 		1028 0235  PowerEdge R710 BCM5709 Gigabit Ethernet
 		1028 0236  PowerEdge R610 BCM5709 Gigabit Ethernet
@@ -11615,7 +11659,7 @@
 	2464  HSF 56k Data/Fax/Voice Modem (Mob SmartDAA)
 	2465  HSF 56k Data/Fax/Voice/Spkp (w/HS) Modem (Mob SmartDAA)
 	2466  HSF 56k Data/Fax/Voice/Spkp Modem (Mob SmartDAA)
-	2bfa  HDAudio Soft Data Fax Modem with SmartCP
+	2bfa  D110 HDAudio Soft Data Fax Modem with SmartCP
 		1025 0009  Aspire 5622WLMi
 	2f00  HSF 56k HSFi Modem
 		13e0 8d84  IBM HSFi V.90
@@ -11638,6 +11682,7 @@
 	8800  CX23880/1/2/3 PCI Video and Audio Decoder
 		0070 2801  Hauppauge WinTV 28xxx (Roslyn) models
 		0070 3401  Hauppauge WinTV 34xxx models
+		0070 6902  WinTV HVR-4000-HD
 		0070 7801  WinTV HVR-1800 MCE
 		0070 9001  Nova-T DVB-T
 		0070 9200  Nova-SE2 DVB-S
@@ -11687,6 +11732,7 @@
 		7063 5500  pcHDTV HD-5500
 	8802  CX23880/1/2/3 PCI Video and Audio Decoder [MPEG Port]
 		0070 2801  Hauppauge WinTV 28xxx (Roslyn) models
+		0070 6902  WinTV HVR-4000-HD
 		0070 9002  Nova-T DVB-T Model 909
 		0070 9402  WinTV-HVR1100 DVB-T/Hybrid
 		0070 9600  WinTV 88x MPEG Encoder
@@ -11704,11 +11750,13 @@
 		7063 3000  pcHDTV HD3000 HDTV
 		7063 5500  pcHDTV HD-5500
 	8804  CX23880/1/2/3 PCI Video and Audio Decoder [IR Port]
+		0070 6902  WinTV HVR-4000-HD
 		0070 9002  Nova-T DVB-T Model 909
 		0070 9402  WinTV-HVR1100 DVB-T/Hybrid
 		7063 5500  pcHDTV HD-5500
 	8811  CX23880/1/2/3 PCI Video and Audio Decoder [Audio Port]
 		0070 3401  Hauppauge WinTV 34xxx models
+		0070 6902  WinTV HVR-4000-HD
 		0070 9402  WinTV-HVR1100 DVB-T/Hybrid
 		0070 9600  WinTV 88x Audio
 		1462 8606  MSI TV-@nywhere Master
@@ -12099,7 +12147,7 @@
 	0011  XP100 DSP Accelerator [XP100-P1]
 	0012  XP100 DSP Accelerator [XP100-P2]
 	0013  XP100 DSP Accelerator [XP100-P3]
-	0014  RamSan-20 Flash SSD
+	0014  RamSan Flash SSD
 	0015  ZBox
 15b7  Sandisk Corp
 15b8  ADDI-DATA GmbH
@@ -12108,11 +12156,15 @@
 	100a  APCI1696 SP controller (96 TTL I/Os)
 	3001  APCI3501 SP controller (analog output board)
 	300f  APCI3600 Noise and vibration measurement board
+	7001  APCI7420 2-port Serial Controller
+	7002  APCI7300 Serial Controller
 15b9  Maestro Digital Communications
 15ba  Impacct Technology Corp
 15bb  Portwell Inc
 15bc  Agilent Technologies
 	0103  QX4 PCI Express quad 4-gigabit Fibre Channel controller
+	0105  Celerity FC-42XS Fibre Channel Adapter
+		117c 0022  Celerity FC-42XS Fibre Channel Adapter
 	1100  E8001-66442 PCI Express CIC
 	2922  64 Bit, 133MHz PCI-X Exerciser & Protocol Checker
 	2928  64 Bit, 66MHz PCI Exerciser & Analyzer
@@ -12562,6 +12614,7 @@
 	8083  GL880 USB 1.1 UHCI controller
 	8084  GL880 USB 2.0 EHCI controller
 17aa  Lenovo
+	20b1  ThinkPad T61p
 17ab  Phillips Components
 17af  Hightech Information System Ltd.
 17b3  Hawking Technologies
@@ -12921,6 +12974,8 @@
 		1924 5105  SFN4111T-R5
 		1924 5201  SFN4112F-R1
 		1924 5202  SFN4112F-R2
+	0803  SFL9021 [Solarstorm]
+		1924 6200  SFN5122F-R0
 	6703  SFC4000 rev A iSCSI/Onload [Solarstorm]
 		10b8 0102  SMC10GPCIe-10BT (A2) [TigerCard]
 		10b8 0103  SMC10GPCIe-10BT (A3) [TigerCard]
@@ -13032,12 +13087,12 @@
 1974  TransferZentrum Mikroelektronik
 1977  Parsec
 197b  JMicron Technology Corp.
-	0250  JMC250 PCI Express Gigabit Ethernet
-	0260  JMC260 PCI Express Fast Ethernet
-	2360  JMicron 20360/20363 AHCI Controller
+	0250  JMC250 PCI Express Gigabit Ethernet Controller
+	0260  JMC260 PCI Express Fast Ethernet Controller
+	2360  JMB360 AHCI Controller
 	2361  JMB361 AHCI/IDE
 		1462 7235  P965 Neo MS-7235 mainboard
-	2363  20360/20363 Serial ATA Controller
+	2363  JMB362/JMB363 AHCI Controller
 		1043 81e4  P5B [JMB363]
 		1458 b000  GA-EP45-DS5 Motherboard
 		1849 2363  Motherboard (one of many)
@@ -14187,6 +14242,7 @@
 		103c 31ef  NC362i Integrated Dual port Gigabit Server Adapter
 		103c 323f  NC362i Integrated Dual port Gigabit Server Adapter
 		10a9 8028  UV-BaseIO dual-port GbE
+		13a3 0037  DS4100 Secure Multi-Gigabit Server Adapter with Compression
 		8086 a01c  Gigabit ET Dual Port Server Adapter
 		8086 a03c  Gigabit ET Dual Port Server Adapter
 	10ca  82576 Virtual Function
@@ -14474,6 +14530,9 @@
 		8086 a11c  82598EB 10-Gigabit AT2 Server Adapter
 		8086 a12c  82598EB 10-Gigabit AT2 Server Adapter
 	150c  82583V Gigabit Network Connection
+	150d  82576 Gigabit Backplane Connection
+		8086 a10c  Gigabit ET Quad Port Mezzanine Card
+	1518  82576NS SerDes Gigabit Network Connection
 	1960  80960RP (i960RP) Microprocessor
 		101e 0431  MegaRAID 431 RAID Controller
 		101e 0438  MegaRAID 438 Ultra2 LVD RAID Controller
@@ -14918,6 +14977,7 @@
 		1043 80a6  P4P800 series motherboard
 		1458 24d1  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1565 5200  P4TSV Motherboard (865G)
 		15d9 4580  P4SCE Mainboard
 		8086 3427  S875WP1-E mainboard
@@ -14954,6 +15014,7 @@
 		1043 80a6  P4P800 Mainboard
 		1458 24d2  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1565 3101  P4TSV Motherboard (865G)
 		15d9 4580  P4SCE Mainboard
 		1734 101c  PRIMERGY RX/TX S2 series SMBus
@@ -14975,6 +15036,7 @@
 		1043 80a6  P4P800/P5P800 series motherboard
 		1458 24d2  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1565 3101  P4TSV Motherboard (865G)
 		15d9 4580  P4SCE Mainboard
 		1734 101c  PRIMERGY RX/TX S2 series onboard UHCI
@@ -14992,6 +15054,7 @@
 		1458 a002  GA-8IPE1000/8KNXP motherboard
 		1462 0080  865PE Neo2-V (MS-6788) Mainboard
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		8086 a000  D865PERL mainboard
 		8086 e000  D865PERL mainboard
 		8086 e001  Desktop Board D865GBF
@@ -15010,6 +15073,7 @@
 		1043 80a6  P4P800/P5P800 series motherboard
 		1458 24d2  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1565 3101  P4TSV Motherboard (865G)
 		15d9 4580  P4SCE Mainboard
 		1734 101c  PRIMERGY RX/TX S2 series onboard UHCI
@@ -15031,6 +15095,7 @@
 		1458 24d2  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
 		1462 7580  MSI 875P
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1565 3101  P4TSV Motherboard (865G)
 		15d9 4580  P4SCE Mainboard
 		1734 101c  PRIMERGY RX/TX S2 series onboard IDE
@@ -15054,6 +15119,7 @@
 		1043 80a6  P4P800/P5P800 series motherboard
 		1458 5006  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		8086 3427  S875WP1-E mainboard
 		8086 4246  Desktop Board D865GBF
 		8086 4c43  Desktop Board D865GLC
@@ -15064,6 +15130,7 @@
 		1043 80a6  P4P800/P5P800 series motherboard
 		1458 24d2  GA-8IPE1000 Pro2 motherboard (865PE)
 		1462 7280  865PE Neo2 (MS-6728)
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1565 3101  P4TSV Motherboard (865G)
 		15d9 4580  P4SCE Mainboard
 		1734 101c  PRIMERGY RX/TX S2 series onboard UHCI
@@ -15131,6 +15198,7 @@
 		1028 019d  Dimension 3000
 		103c 12bc  D530 sff(dc578av)
 		1043 80a5  P5P800-MX Mainboard
+		1462 7650  Hetis 865GV-E (MS-7065)
 		1734 101b  Fujitsu-Siemens Scenic E300 i865GV
 		8086 4246  Desktop Board D865GBF
 		8086 4c43  Desktop Board D865GLC
@@ -15928,6 +15996,7 @@
 	2916  82801IR (ICH9R) LPC Interface Controller
 	2917  ICH9M-E LPC Interface Controller
 	2918  82801IB (ICH9) LPC Interface Controller
+		1028 0236  PowerEdge R610 82801IB (ICH9) LPC Interface Controller
 	2919  ICH9M LPC Interface Controller
 	2920  82801IR/IO/IH (ICH9R/DO/DH) 4 port SATA IDE Controller
 		1028 020f  PowerEdge R300 onboard SATA Controller
@@ -15949,12 +16018,15 @@
 		1028 0211  Optiplex 755
 	2928  ICH9M/M-E 2 port SATA IDE Controller
 	2929  ICH9M/M-E SATA AHCI Controller
+		103c 3628  dv6-1190en
 	292c  ICH9M-E SATA RAID Controller
 	292d  ICH9M/M-E 2 port SATA IDE Controller
 	292e  ICH9M SATA IDE Controller
 	2930  82801I (ICH9 Family) SMBus Controller
 		1028 0211  Optiplex 755
+		103c 3628  dv6-1190en
 	2932  82801I (ICH9 Family) Thermal Subsystem
+		103c 3628  dv6-1190en
 	2934  82801I (ICH9 Family) USB UHCI Controller #1
 		1028 020f  PowerEdge R300 onboard UHCI
 		1028 0210  PowerEdge T300 onboard UHCI
@@ -16025,6 +16097,7 @@
 		8086 293c  Optiplex 755
 	293e  82801I (ICH9 Family) HD Audio Controller
 		1028 0211  Optiplex 755
+		103c 3628  dv6-1190en
 		8086 293e  Optiplex 755
 		8086 2940  Optiplex 755
 	2940  82801I (ICH9 Family) PCI Express Port 1
@@ -16237,14 +16310,14 @@
 	2c33  Xeon 5500/Core i7 Integrated Memory Controller Channel 2 Thermal Control Registers
 	2c40  Xeon 5500/Core i7 QuickPath Architecture Generic Non-Core Registers
 	2c41  Xeon 5500/Core i7 QuickPath Architecture Generic Non-Core Registers
-	2c50  QuickPath Architecture Generic Non-Core Registers
-	2c51  QuickPath Architecture Generic Non-Core Registers
-	2c52  QuickPath Architecture Generic Non-Core Registers
-	2c53  QuickPath Architecture Generic Non-Core Registers
-	2c54  QuickPath Architecture Generic Non-Core Registers
-	2c55  QuickPath Architecture Generic Non-Core Registers
-	2c56  QuickPath Architecture Generic Non-Core Registers
-	2c57  QuickPath Architecture Generic Non-Core Registers
+	2c50  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c51  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c52  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c53  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c54  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c55  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c56  Core Processor QuickPath Architecture Generic Non-Core Registers
+	2c57  Core Processor QuickPath Architecture Generic Non-Core Registers
 	2c58  Jasper Forest QPI Generic Non-core Registers
 	2c59  Jasper Forest QPI Generic Non-core Registers
 	2c5a  Jasper Forest QPI Generic Non-core Registers
@@ -16255,20 +16328,20 @@
 	2c5f  Jasper Forest QPI Generic Non-core Registers
 	2c62  QuickPath Architecture Generic Non-core Registers
 	2c70  QuickPath Architecture Generic Non-core Registers
-	2c81  QuickPath Architecture System Address Decoder
-	2c90  QPI Link
-	2c91  QPI Physical 0
-	2c98  Lynnfield Integrated Memory Controller
-	2c99  Lynnfield Integrated Memory Controller Target Address Decoder
-	2c9c  Lynnfield Integrated Memory Controller Test Registers
-	2ca0  Lynnfield Integrated Memory Controller Channel 0 Control Registers
-	2ca1  Lynnfield Integrated Memory Controller Channel 0 Address Registers
-	2ca2  Lynnfield Integrated Memory Controller Channel 0 Rank Registers
-	2ca3  Lynnfield Integrated Memory Controller Channel 0 Thermal Control Registers
-	2ca8  Lynnfield Integrated Memory Controller Channel 1 Control Registers
-	2ca9  Lynnfield Integrated Memory Controller Channel 1 Address Registers
-	2caa  Lynnfield Integrated Memory Controller Channel 1 Rank Registers
-	2cab  Lynnfield Integrated Memory Controller Channel 1 Thermal Control Registers
+	2c81  Core Processor QuickPath Architecture System Address Decoder
+	2c90  Core Processor QPI Link 0
+	2c91  Core Processor QPI Physical 0
+	2c98  Core Processor Integrated Memory Controller
+	2c99  Core Processor Integrated Memory Controller Target Address Decoder
+	2c9c  Core Processor Integrated Memory Controller Test Registers
+	2ca0  Core Processor Integrated Memory Controller Channel 0 Control Registers
+	2ca1  Core Processor Integrated Memory Controller Channel 0 Address Registers
+	2ca2  Core Processor Integrated Memory Controller Channel 0 Rank Registers
+	2ca3  Core Processor Integrated Memory Controller Channel 0 Thermal Control Registers
+	2ca8  Core Processor Integrated Memory Controller Channel 1 Control Registers
+	2ca9  Core Processor Integrated Memory Controller Channel 1 Address Registers
+	2caa  Core Processor Integrated Memory Controller Channel 1 Rank Registers
+	2cab  Core Processor Integrated Memory Controller Channel 1 Thermal Control Registers
 	2cc1  Jasper Forest QPI System Address Decoder
 	2cd0  Jasper Forest QPI Link 0
 	2cd1  Jasper Forest QPI Physical 0
@@ -16389,6 +16462,7 @@
 	3401  5520/5500/X58 I/O Hub to ESI Port
 	3402  5520/5500/X58 I/O Hub to ESI Port
 	3403  5500 I/O Hub to ESI Port
+		1028 0236  PowerEdge R610 I/O Hub to ESI Port
 		1028 0287  PowerEdge M610 I/O Hub to ESI Port
 		1028 028c  PowerEdge R410 I/O Hub to ESI Port
 		1028 028d  PowerEdge T410 I/O Hub to ESI Port
@@ -16694,86 +16768,78 @@
 	3a78  82801JD/DO (ICH10 Family) PCI Express Port 5
 	3a7a  82801JD/DO (ICH10 Family) PCI Express Port 6
 	3a7c  82801JD/DO (ICH10 Family) Gigabit Ethernet Controller
-	3b00  Ibex Peak LPC Interface Controller
-	3b01  Ibex Peak LPC Interface Controller
-	3b02  Ibex Peak LPC Interface Controller
-	3b03  Ibex Peak LPC Interface Controller
-	3b04  Ibex Peak LPC Interface Controller
-	3b05  Ibex Peak LPC Interface Controller
-	3b06  Ibex Peak LPC Interface Controller
-	3b07  Ibex Peak LPC Interface Controller
-	3b08  Ibex Peak LPC Interface Controller
-	3b09  Ibex Peak LPC Interface Controller
-	3b0a  Ibex Peak LPC Interface Controller
-	3b0b  Ibex Peak LPC Interface Controller
-	3b0c  Ibex Peak LPC Interface Controller
-	3b0d  Ibex Peak LPC Interface Controller
-	3b0e  Ibex Peak LPC Interface Controller
-	3b0f  Ibex Peak LPC Interface Controller
-	3b10  Ibex Peak LPC Interface Controller
-	3b11  Ibex Peak LPC Interface Controller
-	3b12  Ibex Peak LPC Interface Controller
-	3b13  Ibex Peak LPC Interface Controller
-	3b14  Ibex Peak LPC Interface Controller
-	3b15  Ibex Peak LPC Interface Controller
-	3b16  Ibex Peak LPC Interface Controller
-	3b17  Ibex Peak LPC Interface Controller
-	3b18  Ibex Peak LPC Interface Controller
-	3b19  Ibex Peak LPC Interface Controller
-	3b1a  Ibex Peak LPC Interface Controller
-	3b1b  Ibex Peak LPC Interface Controller
-	3b1c  Ibex Peak LPC Interface Controller
-	3b1d  Ibex Peak LPC Interface Controller
-	3b1e  Ibex Peak LPC Interface Controller
-	3b1f  Ibex Peak LPC Interface Controller
-	3b20  Ibex Peak 4 port SATA IDE Controller
-	3b21  Ibex Peak 2 port SATA IDE Controller
-	3b22  Ibex Peak 6 port SATA AHCI Controller
-	3b23  Ibex Peak 4 port SATA AHCI Controller
-	3b24  Ibex Peak SATA Enhanced RAID Controller
-		1028 02a4  PERC S100 Controller (PE T310)
-		1028 02a5  PERC S100 Controller (PE R210)
-		1028 02a6  PERC S100 Controller (PE T110)
-	3b25  Ibex Peak SATA RAID Controller
-		1028 02a4  PERC S100 Controller (PE T310)
-		1028 02a5  PERC S100 Controller
-		1028 02a6  PERC S100 Controller (PE T110)
-	3b26  Ibex Peak 2 port SATA IDE Controller
-	3b28  Ibex Peak 4 port SATA IDE Controller
-	3b29  Ibex Peak 4 port SATA AHCI Controller
-	3b2b  Ibex Peak SATA Enhanced RAID Controller
-	3b2c  Ibex Peak SATA RAID Controller
-	3b2d  Ibex Peak 2 port SATA IDE Controller
-	3b2e  Ibex Peak 4 port SATA IDE Controller
-	3b2f  Ibex Peak 6 port SATA AHCI Controller
-	3b30  Ibex Peak SMBus Controller
-	3b32  Ibex Peak Thermal Subsystem
-	3b34  Ibex Peak USB2 Enhanced Host Controller
-	3b36  Ibex Peak USB Universal Host Controller
-	3b37  Ibex Peak USB Universal Host Controller
-	3b38  Ibex Peak USB Universal Host Controller
-	3b39  Ibex Peak USB Universal Host Controller
-	3b3a  Ibex Peak USB Universal Host Controller
-	3b3b  Ibex Peak USB Universal Host Controller
-	3b3c  Ibex Peak USB2 Enhanced Host Controller
-	3b3e  Ibex Peak USB Universal Host Controller
-	3b3f  Ibex Peak USB Universal Host Controller
-	3b40  Ibex Peak USB Universal Host Controller
-	3b41  Ibex Peak LAN Controller
-	3b42  Ibex Peak PCI Express Root Port 1
-	3b44  Ibex Peak PCI Express Root Port 2
-	3b46  Ibex Peak PCI Express Root Port 3
-	3b48  Ibex Peak PCI Express Root Port 4
-	3b4a  Ibex Peak PCI Express Root Port 5
-	3b4c  Ibex Peak PCI Express Root Port 6
-	3b4e  Ibex Peak PCI Express Root Port 7
-	3b50  Ibex Peak PCI Express Root Port 8
-	3b53  Ibex Peak VECI Controller
-	3b56  Ibex Peak High Definition Audio
-	3b64  Ibex Peak HECI Controller
-	3b65  Ibex Peak HECI Controller
-	3b66  Ibex Peak PT IDER Controller
-	3b67  Ibex Peak KT Controller
+	3b00  5 Series/3400 Series Chipset LPC Interface Controller
+	3b01  Mobile 5 Series Chipset LPC Interface Controller
+	3b02  5 Series Chipset LPC Interface Controller
+	3b03  Mobile 5 Series Chipset LPC Interface Controller
+	3b04  5 Series Chipset LPC Interface Controller
+	3b05  Mobile 5 Series Chipset LPC Interface Controller
+	3b06  5 Series Chipset LPC Interface Controller
+	3b07  Mobile 5 Series Chipset LPC Interface Controller
+	3b08  5 Series Chipset LPC Interface Controller
+	3b09  Mobile 5 Series Chipset LPC Interface Controller
+	3b0a  5 Series Chipset LPC Interface Controller
+	3b0b  Mobile 5 Series Chipset LPC Interface Controller
+	3b0c  5 Series Chipset LPC Interface Controller
+	3b0d  5 Series/3400 Series Chipset LPC Interface Controller
+	3b0e  5 Series/3400 Series Chipset LPC Interface Controller
+	3b0f  5 Series/3400 Series Chipset LPC Interface Controller
+	3b10  5 Series/3400 Series Chipset LPC Interface Controller
+	3b11  5 Series/3400 Series Chipset LPC Interface Controller
+	3b12  3400 Series Chipset LPC Interface Controller
+	3b13  5 Series/3400 Series Chipset LPC Interface Controller
+	3b14  3400 Series Chipset LPC Interface Controller
+	3b15  5 Series/3400 Series Chipset LPC Interface Controller
+	3b16  3400 Series Chipset LPC Interface Controller
+	3b17  5 Series/3400 Series Chipset LPC Interface Controller
+	3b18  5 Series/3400 Series Chipset LPC Interface Controller
+	3b19  5 Series/3400 Series Chipset LPC Interface Controller
+	3b1a  5 Series/3400 Series Chipset LPC Interface Controller
+	3b1b  5 Series/3400 Series Chipset LPC Interface Controller
+	3b1c  5 Series/3400 Series Chipset LPC Interface Controller
+	3b1d  5 Series/3400 Series Chipset LPC Interface Controller
+	3b1e  5 Series/3400 Series Chipset LPC Interface Controller
+	3b1f  5 Series/3400 Series Chipset LPC Interface Controller
+	3b20  5 Series/3400 Series Chipset 4 port SATA IDE Controller
+	3b21  5 Series/3400 Series Chipset 2 port SATA IDE Controller
+	3b22  5 Series/3400 Series Chipset 6 port SATA AHCI Controller
+	3b23  5 Series/3400 Series Chipset 4 port SATA AHCI Controller
+	3b25  5 Series/3400 Series Chipset SATA RAID Controller
+	3b26  5 Series/3400 Series Chipset 2 port SATA IDE Controller
+	3b28  5 Series/3400 Series Chipset 4 port SATA IDE Controller
+	3b29  5 Series/3400 Series Chipset 4 port SATA AHCI Controller
+	3b2c  5 Series/3400 Series Chipset SATA RAID Controller
+	3b2d  5 Series/3400 Series Chipset 2 port SATA IDE Controller
+	3b2e  5 Series/3400 Series Chipset 4 port SATA IDE Controller
+	3b2f  5 Series/3400 Series Chipset 6 port SATA AHCI Controller
+	3b30  5 Series/3400 Series Chipset SMBus Controller
+	3b32  5 Series/3400 Series Chipset Thermal Subsystem
+	3b34  5 Series/3400 Series Chipset USB2 Enhanced Host Controller
+	3b36  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b37  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b38  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b39  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b3a  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b3b  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b3c  5 Series/3400 Series Chipset USB2 Enhanced Host Controller
+	3b3e  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b3f  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b40  5 Series/3400 Series Chipset USB Universal Host Controller
+	3b41  5 Series/3400 Series Chipset LAN Controller
+	3b42  5 Series/3400 Series Chipset PCI Express Root Port 1
+	3b44  5 Series/3400 Series Chipset PCI Express Root Port 2
+	3b46  5 Series/3400 Series Chipset PCI Express Root Port 3
+	3b48  5 Series/3400 Series Chipset PCI Express Root Port 4
+	3b4a  5 Series/3400 Series Chipset PCI Express Root Port 5
+	3b4c  5 Series/3400 Series Chipset PCI Express Root Port 6
+	3b4e  5 Series/3400 Series Chipset PCI Express Root Port 7
+	3b50  5 Series/3400 Series Chipset PCI Express Root Port 8
+	3b53  5 Series/3400 Series Chipset VECI Controller
+	3b56  5 Series/3400 Series Chipset High Definition Audio
+	3b64  5 Series/3400 Series Chipset HECI Controller
+	3b65  5 Series/3400 Series Chipset HECI Controller
+	3b66  5 Series/3400 Series Chipset PT IDER Controller
+	3b67  5 Series/3400 Series Chipset KT Controller
 	4000  5400 Chipset Memory Controller Hub
 	4001  5400 Chipset Memory Controller Hub
 	4003  5400 Chipset Memory Controller Hub
@@ -17056,24 +17122,24 @@
 		4c53 1050  CT7 mainboard
 		4c53 1051  CE7 mainboard
 		e4bf 1000  CC8-1-BLUES
-	d130  Clarksfield/Lynnfield DMI
-	d131  Clarksfield/Lynnfield DMI
-	d132  Clarksfield/Lynnfield DMI
-	d133  Clarksfield/Lynnfield DMI
-	d134  Clarksfield/Lynnfield DMI
-	d135  Clarksfield/Lynnfield DMI
-	d136  Clarksfield/Lynnfield DMI
-	d137  Clarksfield/Lynnfield DMI
-	d138  Clarksfield/Lynnfield PCI Express Root Port 1
-	d139  Lynnfield PCI Express Root Port 2
-	d13a  Clarksfield/Lynnfield PCI Express Root Port 3
-	d13b  Lynnfield PCI Express Root Port 4
-	d150  QPI Link
-	d151  QPI Routing and Protocol Registers
-	d155  Clarksfield/Lynnfield System Management Registers
-	d156  Clarksfield/Lynnfield Semaphore and Scratchpad Registers
-	d157  Clarksfield/Lynnfield System Control and Status Registers
-	d158  Clarksfield/Lynnfield Miscellaneous Registers
+	d130  Core Processor DMI
+	d131  Core Processor DMI
+	d132  Core Processor DMI
+	d133  Core Processor DMI
+	d134  Core Processor DMI
+	d135  Core Processor DMI
+	d136  Core Processor DMI
+	d137  Core Processor DMI
+	d138  Core Processor PCI Express Root Port 1
+	d139  Core Processor PCI Express Root Port 2
+	d13a  Core Processor PCI Express Root Port 3
+	d13b  Core Processor PCI Express Root Port 4
+	d150  Core Processor QPI Link
+	d151  Core Processor QPI Routing and Protocol Registers
+	d155  Core Processor System Management Registers
+	d156  Core Processor Semaphore and Scratchpad Registers
+	d157  Core Processor System Control and Status Registers
+	d158  Core Processor Miscellaneous Registers
 80ee  InnoTek Systemberatung GmbH
 	beef  VirtualBox Graphics Adapter
 	cafe  VirtualBox Guest Service
@@ -17399,6 +17465,7 @@
 		9005 0432  ASC-44300 (Spirit-Lite non-RAID)
 	043e  AIC-9405W SAS (Razor-Lite ASIC non-RAID)
 	043f  AIC-9405W SAS (Razor-Lite ASIC RAID)
+	0450  ASC-1405 Unified Serial HBA
 	0500  Obsidian chipset SCSI controller
 		1014 02c1  PCI-X DDR 3Gb SAS Adapter (572A/572C)
 		1014 02c2  PCI-X DDR 3Gb SAS RAID Adapter (572B/572D)
@@ -17488,6 +17555,8 @@
 aa42  Scitex Digital Video
 aa55  Ncomputing X300 PCI-Engine
 aaaa  Adnaco Technology Inc.
+	0001  H1 PCIe over fiber optic host controller
+	0002  R1BP1 PCIe over fiber optic expansion chassis
 abcd  Vadatech Inc.
 ac1e  Digital Receiver Technology Inc
 ac3d  Actuality Systems
@@ -17522,17 +17591,21 @@
 ceba  KEBA AG
 d161  Digium, Inc.
 	0120  Wildcard TE120P single-span T1/E1/J1 card
-	0205  Wildcard TE205P dual-span T1/E1/J1 card 5.0V
-	0210  Wildcard TE210P dual-span T1/E1/J1 card 3.3V
-	0405  Wildcard TE405P quad-span T1/E1/J1 card 5.0V
-	0410  Wildcard TE410P quad-span T1/E1/J1 card 3.3V
+	0205  Wildcard TE205P/TE207P dual-span T1/E1/J1 card 5.0V
+	0210  Wildcard TE210P/TE212P dual-span T1/E1/J1 card 3.3V
+	0220  Wildcard TE220 dual-span T1/E1/J1 card 3.3V (PCI-Express)
+	0405  Wildcard TE405P/TE407P quad-span T1/E1/J1 card 5.0V
+	0410  Wildcard TE410P/TE412P quad-span T1/E1/J1 card 3.3V
+	0420  Wildcard TE420P quad-span T1/E1/J1 card 3.3V (PCI-Express)
 	0800  Wildcard TDM800P 8-port analog card
 	2400  Wildcard TDM2400P 24-port analog card
 	3400  Wildcard TC400P transcoder base card
 	8000  Wildcard TE121 single-span T1/E1/J1 card (PCI-Express)
 	8001  Wildcard TE122 single-span T1/E1/J1 card
 	8002  Wildcard AEX800 8-port analog card (PCI-Express)
-	8005  TDM400P
+	8003  Wildcard AEX2400 24-port analog card (PCI-Express)
+	8005  Wildcard TDM410 4-port analog card
+	8006  Wildcard AEX410 4-port analog card (PCI-Express)
 	b410  Wildcard B410 quad-BRI card
 d4d4  Dy4 Systems Inc
 	0601  PCI Mezzanine Card
--- pciutils-3.1.4.orig/lib/Makefile
+++ pciutils-3.1.4/lib/Makefile
@@ -42,18 +42,20 @@
 OBJS += nbsd-libpci
 endif
 
-all: $(PCILIB) $(PCILIBPC)
+PCILIBA=libpci.a
 
-ifeq ($(SHARED),no)
-$(PCILIB): $(addsuffix .o,$(OBJS))
+all: $(PCILIB) $(PCILIBA) $(PCILIBPC)
+
+#ifeq ($(SHARED),no)
+$(PCILIBA): $(addsuffix .o,$(OBJS))
 	rm -f $@
 	$(AR) rcs $@ $^
 	$(RANLIB) $@
-else
+#else
 CFLAGS += -fPIC -fvisibility=hidden
 $(PCILIB): $(addsuffix .o,$(OBJS))
 	$(CC) -shared $(LDFLAGS) $(SONAME) -Wl,--version-script=libpci.ver -o $@ $^ $(LIB_LDLIBS)
-endif
+#endif
 
 $(PCILIBPC): libpci.pc.in
 	sed <$< >$@ -e 's,@PREFIX@,$(PREFIX),' \
